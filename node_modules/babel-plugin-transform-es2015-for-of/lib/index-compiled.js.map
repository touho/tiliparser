{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["/*istanbul ignore next*/\"use strict\";\n\nexports.__esModule = true;\n\nexports.default = function ( /*istanbul ignore next*/_ref) {\n  /*istanbul ignore next*/var /* eslint max-len: 0 */\n\n  messages = _ref.messages;\n  /*istanbul ignore next*/var template = _ref.template;\n  /*istanbul ignore next*/var t = _ref.types;\n\n  var buildForOfArray = template( /*istanbul ignore next*/\"\\n    for (var KEY = 0; KEY < ARR.length; KEY++) BODY;\\n  \");\n\n  var buildForOfLoose = template( /*istanbul ignore next*/\"\\n    for (var LOOP_OBJECT = OBJECT,\\n             IS_ARRAY = Array.isArray(LOOP_OBJECT),\\n             INDEX = 0,\\n             LOOP_OBJECT = IS_ARRAY ? LOOP_OBJECT : LOOP_OBJECT[Symbol.iterator]();;) {\\n      var ID;\\n      if (IS_ARRAY) {\\n        if (INDEX >= LOOP_OBJECT.length) break;\\n        ID = LOOP_OBJECT[INDEX++];\\n      } else {\\n        INDEX = LOOP_OBJECT.next();\\n        if (INDEX.done) break;\\n        ID = INDEX.value;\\n      }\\n    }\\n  \");\n\n  var buildForOf = template( /*istanbul ignore next*/\"\\n    var ITERATOR_COMPLETION = true;\\n    var ITERATOR_HAD_ERROR_KEY = false;\\n    var ITERATOR_ERROR_KEY = undefined;\\n    try {\\n      for (var ITERATOR_KEY = OBJECT[Symbol.iterator](), STEP_KEY; !(ITERATOR_COMPLETION = (STEP_KEY = ITERATOR_KEY.next()).done); ITERATOR_COMPLETION = true) {\\n      }\\n    } catch (err) {\\n      ITERATOR_HAD_ERROR_KEY = true;\\n      ITERATOR_ERROR_KEY = err;\\n    } finally {\\n      try {\\n        if (!ITERATOR_COMPLETION && ITERATOR_KEY.return) {\\n          ITERATOR_KEY.return();\\n        }\\n      } finally {\\n        if (ITERATOR_HAD_ERROR_KEY) {\\n          throw ITERATOR_ERROR_KEY;\\n        }\\n      }\\n    }\\n  \");\n\n  function _ForOfStatementArray(path) {\n    /*istanbul ignore next*/var node = path.node;\n    /*istanbul ignore next*/var scope = path.scope;\n\n    var nodes = [];\n    var right = node.right;\n\n    if (!t.isIdentifier(right) || !scope.hasBinding(right.name)) {\n      var uid = scope.generateUidIdentifier(\"arr\");\n      nodes.push(t.variableDeclaration(\"var\", [t.variableDeclarator(uid, right)]));\n      right = uid;\n    }\n\n    var iterationKey = scope.generateUidIdentifier(\"i\");\n\n    var loop = buildForOfArray({\n      BODY: node.body,\n      KEY: iterationKey,\n      ARR: right\n    });\n\n    t.inherits(loop, node);\n    t.ensureBlock(loop);\n\n    var iterationValue = t.memberExpression(right, iterationKey, true);\n\n    var left = node.left;\n    if (t.isVariableDeclaration(left)) {\n      left.declarations[0].init = iterationValue;\n      loop.body.body.unshift(left);\n    } else {\n      loop.body.body.unshift(t.expressionStatement(t.assignmentExpression(\"=\", left, iterationValue)));\n    }\n\n    if (path.parentPath.isLabeledStatement()) {\n      loop = t.labeledStatement(path.parentPath.node.label, loop);\n    }\n\n    nodes.push(loop);\n\n    return nodes;\n  }\n\n  return {\n    visitor: { /*istanbul ignore next*/\n      ForOfStatement: function ForOfStatement(path, state) {\n        if (path.get(\"right\").isArrayExpression()) {\n          return path.replaceWithMultiple(_ForOfStatementArray.call(this, path, state));\n        }\n\n        var callback = spec;\n        if (state.opts.loose) callback = loose;\n\n        /*istanbul ignore next*/var node = path.node;\n\n        var build = callback(path, state);\n        var declar = build.declar;\n        var loop = build.loop;\n        var block = loop.body;\n\n        // ensure that it's a block so we can take all its statements\n        path.ensureBlock();\n\n        // add the value declaration to the new loop body\n        if (declar) {\n          block.body.push(declar);\n        }\n\n        // push the rest of the original loop body onto our new body\n        block.body = block.body.concat(node.body.body);\n\n        t.inherits(loop, node);\n        t.inherits(loop.body, node.body);\n\n        if (build.replaceParent) {\n          path.parentPath.replaceWithMultiple(build.node);\n          path.remove();\n        } else {\n          path.replaceWithMultiple(build.node);\n        }\n      }\n    }\n  };\n\n  function loose(path, file) {\n    /*istanbul ignore next*/var node = path.node;\n    /*istanbul ignore next*/var scope = path.scope;\n\n\n    var left = node.left;\n    var declar = /*istanbul ignore next*/void 0,\n        id = /*istanbul ignore next*/void 0;\n\n    if (t.isIdentifier(left) || t.isPattern(left) || t.isMemberExpression(left)) {\n      // for (i of test), for ({ i } of test)\n      id = left;\n    } else if (t.isVariableDeclaration(left)) {\n      // for (let i of test)\n      id = scope.generateUidIdentifier(\"ref\");\n      declar = t.variableDeclaration(left.kind, [t.variableDeclarator(left.declarations[0].id, id)]);\n    } else {\n      throw file.buildCodeFrameError(left, messages.get(\"unknownForHead\", left.type));\n    }\n\n    var iteratorKey = scope.generateUidIdentifier(\"iterator\");\n    var isArrayKey = scope.generateUidIdentifier(\"isArray\");\n\n    var loop = buildForOfLoose({\n      LOOP_OBJECT: iteratorKey,\n      IS_ARRAY: isArrayKey,\n      OBJECT: node.right,\n      INDEX: scope.generateUidIdentifier(\"i\"),\n      ID: id\n    });\n\n    if (!declar) {\n      // no declaration so we need to remove the variable declaration at the top of\n      // the for-of-loose template\n      loop.body.body.shift();\n    }\n\n    //\n\n    return {\n      declar: declar,\n      node: loop,\n      loop: loop\n    };\n  }\n\n  function spec(path, file) {\n    /*istanbul ignore next*/var node = path.node;\n    /*istanbul ignore next*/var scope = path.scope;\n    /*istanbul ignore next*/var parent = path.parent;\n\n    var left = node.left;\n    var declar = /*istanbul ignore next*/void 0;\n\n    var stepKey = scope.generateUidIdentifier(\"step\");\n    var stepValue = t.memberExpression(stepKey, t.identifier(\"value\"));\n\n    if (t.isIdentifier(left) || t.isPattern(left) || t.isMemberExpression(left)) {\n      // for (i of test), for ({ i } of test)\n      declar = t.expressionStatement(t.assignmentExpression(\"=\", left, stepValue));\n    } else if (t.isVariableDeclaration(left)) {\n      // for (let i of test)\n      declar = t.variableDeclaration(left.kind, [t.variableDeclarator(left.declarations[0].id, stepValue)]);\n    } else {\n      throw file.buildCodeFrameError(left, messages.get(\"unknownForHead\", left.type));\n    }\n\n    //\n\n    var iteratorKey = scope.generateUidIdentifier(\"iterator\");\n\n    var template = buildForOf({\n      ITERATOR_HAD_ERROR_KEY: scope.generateUidIdentifier(\"didIteratorError\"),\n      ITERATOR_COMPLETION: scope.generateUidIdentifier(\"iteratorNormalCompletion\"),\n      ITERATOR_ERROR_KEY: scope.generateUidIdentifier(\"iteratorError\"),\n      ITERATOR_KEY: iteratorKey,\n      STEP_KEY: stepKey,\n      OBJECT: node.right,\n      BODY: null\n    });\n\n    var isLabeledParent = t.isLabeledStatement(parent);\n\n    var tryBody = template[3].block.body;\n    var loop = tryBody[0];\n\n    if (isLabeledParent) {\n      tryBody[0] = t.labeledStatement(parent.label, loop);\n    }\n\n    //\n\n    return {\n      replaceParent: isLabeledParent,\n      declar: declar,\n      loop: loop,\n      node: template\n    };\n  }\n};\n\n/*istanbul ignore next*/module.exports = exports[\"default\"];"]}