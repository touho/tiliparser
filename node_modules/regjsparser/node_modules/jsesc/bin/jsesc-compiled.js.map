{"version":3,"sources":["jsesc"],"names":[],"mappings":"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","file":"jsesc-compiled.js","sourcesContent":["\n(function() {\n\n\tvar fs = require('fs');\n\tvar stringEscape = require('../jsesc.js');\n\tvar strings = process.argv.splice(2);\n\tvar stdin = process.stdin;\n\tvar data;\n\tvar timeout;\n\tvar isObject = false;\n\tvar options = {};\n\tvar log = console.log;\n\n\tvar main = function() {\n\t\tvar option = strings[0];\n\n\t\tif (/^(?:-h|--help|undefined)$/.test(option)) {\n\t\t\tlog(\n\t\t\t\t'jsesc v%s - http://mths.be/jsesc',\n\t\t\t\tstringEscape.version\n\t\t\t);\n\t\t\tlog([\n\t\t\t\t'\\nUsage:\\n',\n\t\t\t\t'\\tjsesc [string]',\n\t\t\t\t'\\tjsesc [-s | --single-quotes] [string]',\n\t\t\t\t'\\tjsesc [-d | --double-quotes] [string]',\n\t\t\t\t'\\tjsesc [-w | --wrap] [string]',\n\t\t\t\t'\\tjsesc [-e | --escape-everything] [string]',\n\t\t\t\t'\\tjsesc [-6 | --es6] [string]',\n\t\t\t\t'\\tjsesc [-j | --json] [string]',\n\t\t\t\t'\\tjsesc [-o | --object] [stringified_object]', // `JSON.parse()` the argument\n\t\t\t\t'\\tjsesc [-p | --pretty] [string]', // `compact: false`\n\t\t\t\t'\\tjsesc [-v | --version]',\n\t\t\t\t'\\tjsesc [-h | --help]',\n\t\t\t\t'\\nExamples:\\n',\n\t\t\t\t'\\tjsesc \\'f\\xF6o \\u2665 b\\xE5r \\uD834\\uDF06 baz\\'',\n\t\t\t\t'\\tjsesc --json \\'f\\xF6o \\u2665 b\\xE5r \\uD834\\uDF06 baz\\'',\n\t\t\t\t'\\tjsesc --json --escape-everything \\'f\\xF6o \\u2665 b\\xE5r \\uD834\\uDF06 baz\\'',\n\t\t\t\t'\\tjsesc --double-quotes --wrap \\'f\\xF6o \\u2665 b\\xE5r \\uD834\\uDF06 baz\\'',\n\t\t\t\t'\\techo \\'f\\xF6o \\u2665 b\\xE5r \\uD834\\uDF06 baz\\' | jsesc'\n\t\t\t].join('\\n'));\n\t\t\treturn process.exit(1);\n\t\t}\n\n\t\tif (/^(?:-v|--version)$/.test(option)) {\n\t\t\tlog('v%s', stringEscape.version);\n\t\t\treturn process.exit(1);\n\t\t}\n\n\t\tstrings.forEach(function(string) {\n\t\t\t// Process options\n\t\t\tif (/^(?:-s|--single-quotes)$/.test(string)) {\n\t\t\t\toptions.quotes = 'single';\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (/^(?:-d|--double-quotes)$/.test(string)) {\n\t\t\t\toptions.quotes = 'double';\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (/^(?:-w|--wrap)$/.test(string)) {\n\t\t\t\toptions.wrap = true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (/^(?:-6|--es6)$/.test(string)) {\n\t\t\t\toptions.es6 = true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (/^(?:-e|--escape-everything)$/.test(string)) {\n\t\t\t\toptions.escapeEverything = true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (/^(?:-j|--json)$/.test(string)) {\n\t\t\t\toptions.json = true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (/^(?:-o|--object)$/.test(string)) {\n\t\t\t\tisObject = true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (/^(?:-p|--pretty)$/.test(string)) {\n\t\t\t\tisObject = true;\n\t\t\t\toptions.compact = false;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Process string(s)\n\t\t\tvar result;\n\t\t\ttry {\n\t\t\t\tif (isObject) {\n\t\t\t\t\tstring = JSON.parse(string);\n\t\t\t\t}\n\t\t\t\tresult = stringEscape(string, options);\n\t\t\t\tlog(result);\n\t\t\t} catch(error) {\n\t\t\t\tlog(error.message + '\\n');\n\t\t\t\tlog('Error: failed to escape.');\n\t\t\t\tlog('If you think this is a bug in jsesc, please report it:');\n\t\t\t\tlog('https://github.com/mathiasbynens/jsesc/issues/new');\n\t\t\t\tlog(\n\t\t\t\t\t'\\nStack trace using jsesc@%s:\\n',\n\t\t\t\t\tstringEscape.version\n\t\t\t\t);\n\t\t\t\tlog(error.stack);\n\t\t\t\treturn process.exit(1);\n\t\t\t}\n\t\t});\n\t\t// Return with exit status 0 outside of the `forEach` loop, in case\n\t\t// multiple strings were passed in.\n\t\treturn process.exit(0);\n\n\t};\n\n\tif (stdin.isTTY) {\n\t\t// handle shell arguments\n\t\tmain();\n\t} else {\n\t\t// Either the script is called from within a non-TTY context,\n\t\t// or `stdin` content is being piped in.\n\t\tif (!process.stdout.isTTY) { // called from a non-TTY context\n\t\t\ttimeout = setTimeout(function() {\n\t\t\t\t// if no piped data arrived after a while, handle shell arguments\n\t\t\t\tmain();\n\t\t\t}, 250);\n\t\t}\n\n\t\tdata = '';\n\t\tstdin.on('data', function(chunk) {\n\t\t\tclearTimeout(timeout);\n\t\t\tdata += chunk;\n\t\t});\n\t\tstdin.on('end', function() {\n\t\t\tstrings.push(data.trim());\n\t\t\tmain();\n\t\t});\n\t\tstdin.resume();\n\t}\n\n}());\n"]}