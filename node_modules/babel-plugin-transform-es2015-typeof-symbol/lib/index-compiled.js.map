{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA,wBAAwB;;AAExB,QAAQ,UAAR,GAAqB,IAArB;;AAEA,IAAI,UAAU,QAAQ,8BAAR,CAAd;;AAEA,IAAI,WAAW,uBAAuB,OAAvB,CAAf;;AAEA,QAAQ,OAAR,GAAkB,WAAW,wBAAwB,IAAnC,EAAyC;AACzD,0BAAwB,IAAI,IAAI,KAAK,KAAb;;AAExB,MAAI,SAAS,wBAAwB,CAAC,GAAG,SAAS,OAAb,GAArC;;AAEA,SAAO;AACL,aAAS,EAAE;AACT,aAAO,SAAS,KAAT,CAAe,KAAf,EAAsB;AAC3B,gCAAwB,IAAI,QAAQ,MAAM,KAAlB;;AAExB,YAAI,CAAC,MAAM,UAAN,CAAiB,QAAjB,CAAL,EAAiC;AAC/B;AACD;;AAED,cAAM,MAAN,CAAa,QAAb;AACD,OATM;AAUP,8BAAwB,iBAAiB,SAAS,eAAT,CAAyB,IAAzB,EAA+B;AACtE,gCAAwB,IAAI,OAAO,KAAK,IAAhB;AACxB,gCAAwB,IAAI,SAAS,KAAK,MAAlB;;AAExB,YAAI,KAAK,MAAL,CAAJ,EAAkB;AAClB,YAAI,KAAK,IAAL,CAAU,UAAU,IAAV,EAAgB,wBAAwB;AACpD,iBAAO,KAAK,IAAL,IAAa,CAAC,CAAC,KAAK,IAAL,CAAU,UAAhC;AACD,SAFG,CAAJ,EAEI;;AAEJ,YAAI,KAAK,UAAL,CAAgB,kBAAhB,MAAwC,EAAE,yBAAF,CAA4B,OAA5B,CAAoC,OAAO,QAA3C,KAAwD,CAApG,EAAuG;AACrG;AACA,cAAI,WAAW,KAAK,WAAL,EAAf;AACA,cAAI,SAAS,SAAT,MAAwB,SAAS,IAAT,CAAc,KAAd,KAAwB,QAAhD,IAA4D,SAAS,IAAT,CAAc,KAAd,KAAwB,QAAxF,EAAkG;AAChG;AACD;AACF;;AAED,YAAI,KAAK,QAAL,KAAkB,QAAtB,EAAgC;AAC9B,cAAI,OAAO,EAAE,cAAF,CAAiB,KAAK,SAAL,CAAe,QAAf,CAAjB,EAA2C,CAAC,KAAK,QAAN,CAA3C,CAAX;AACA,cAAI,KAAK,GAAL,CAAS,UAAT,EAAqB,YAArB,EAAJ,EAAyC;AACvC,gBAAI,eAAe,EAAE,aAAF,CAAgB,WAAhB,CAAnB;AACA,gBAAI,QAAQ,EAAE,eAAF,CAAkB,QAAlB,EAA4B,KAAK,QAAjC,CAAZ;AACA,kBAAM,MAAN,IAAgB,IAAhB;AACA,iBAAK,WAAL,CAAiB,EAAE,qBAAF,CAAwB,EAAE,gBAAF,CAAmB,KAAnB,EAA0B,KAA1B,EAAiC,YAAjC,CAAxB,EAAwE,YAAxE,EAAsF,IAAtF,CAAjB;AACD,WALD,MAKO;AACL,iBAAK,WAAL,CAAiB,IAAjB;AACD;AACF;AACF;AAtCM;AADJ,GAAP;AA0CD,CA/CD;;AAiDA;AACA,SAAS,sBAAT,CAAgC,GAAhC,EAAqC;AAAE,SAAO,OAAO,IAAI,UAAX,GAAwB,GAAxB,GAA8B,EAAE,SAAS,GAAX,EAArC;AAAwD;;AAE/F,OAAO,OAAP,GAAiB,QAAQ,SAAR,CAAjB,C,CAAqC","file":"index-compiled.js","sourcesContent":["/*istanbul ignore next*/\"use strict\";\n\nexports.__esModule = true;\n\nvar _symbol = require(\"babel-runtime/core-js/symbol\");\n\nvar _symbol2 = _interopRequireDefault(_symbol);\n\nexports.default = function ( /*istanbul ignore next*/_ref) {\n  /*istanbul ignore next*/var t = _ref.types;\n\n  var IGNORE = /*istanbul ignore next*/(0, _symbol2.default)();\n\n  return {\n    visitor: { /*istanbul ignore next*/\n      Scope: function Scope(_ref2) {\n        /*istanbul ignore next*/var scope = _ref2.scope;\n\n        if (!scope.getBinding(\"Symbol\")) {\n          return;\n        }\n\n        scope.rename(\"Symbol\");\n      },\n      /*istanbul ignore next*/UnaryExpression: function UnaryExpression(path) {\n        /*istanbul ignore next*/var node = path.node;\n        /*istanbul ignore next*/var parent = path.parent;\n\n        if (node[IGNORE]) return;\n        if (path.find(function (path) /*istanbul ignore next*/{\n          return path.node && !!path.node._generated;\n        })) return;\n\n        if (path.parentPath.isBinaryExpression() && t.EQUALITY_BINARY_OPERATORS.indexOf(parent.operator) >= 0) {\n          // optimise `typeof foo === \"string\"` since we can determine that they'll never need to handle symbols\n          var opposite = path.getOpposite();\n          if (opposite.isLiteral() && opposite.node.value !== \"symbol\" && opposite.node.value !== \"object\") {\n            return;\n          }\n        }\n\n        if (node.operator === \"typeof\") {\n          var call = t.callExpression(this.addHelper(\"typeof\"), [node.argument]);\n          if (path.get(\"argument\").isIdentifier()) {\n            var undefLiteral = t.stringLiteral(\"undefined\");\n            var unary = t.unaryExpression(\"typeof\", node.argument);\n            unary[IGNORE] = true;\n            path.replaceWith(t.conditionalExpression(t.binaryExpression(\"===\", unary, undefLiteral), undefLiteral, call));\n          } else {\n            path.replaceWith(call);\n          }\n        }\n      }\n    }\n  };\n};\n\n/*istanbul ignore next*/\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = exports[\"default\"]; /* eslint max-len: 0 */"]}