{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["/*istanbul ignore next*/\"use strict\";\n\nexports.__esModule = true;\n\nvar _getIterator2 = require(\"babel-runtime/core-js/get-iterator\");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nexports.default = function ( /*istanbul ignore next*/_ref) {\n  /*istanbul ignore next*/var t = _ref.types;\n\n  function isString(node) {\n    return t.isLiteral(node) && typeof node.value === \"string\";\n  }\n\n  function buildBinaryExpression(left, right) {\n    return t.binaryExpression(\"+\", left, right);\n  }\n\n  return {\n    visitor: { /*istanbul ignore next*/\n      TaggedTemplateExpression: function TaggedTemplateExpression(path, state) {\n        /*istanbul ignore next*/var node = path.node;\n\n        var quasi = node.quasi;\n        var args = [];\n\n        var strings = [];\n        var raw = [];\n\n        for ( /*istanbul ignore next*/var _iterator = quasi.quasis, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n          /*istanbul ignore next*/\n          var _ref2;\n\n          if (_isArray) {\n            if (_i >= _iterator.length) break;\n            _ref2 = _iterator[_i++];\n          } else {\n            _i = _iterator.next();\n            if (_i.done) break;\n            _ref2 = _i.value;\n          }\n\n          var elem = _ref2;\n\n          strings.push(t.stringLiteral(elem.value.cooked));\n          raw.push(t.stringLiteral(elem.value.raw));\n        }\n\n        strings = t.arrayExpression(strings);\n        raw = t.arrayExpression(raw);\n\n        var templateName = \"taggedTemplateLiteral\";\n        if (state.opts.loose) templateName += \"Loose\";\n\n        var templateObject = state.file.addTemplateObject(templateName, strings, raw);\n        args.push(templateObject);\n\n        args = args.concat(quasi.expressions);\n\n        path.replaceWith(t.callExpression(node.tag, args));\n      },\n      /*istanbul ignore next*/TemplateLiteral: function TemplateLiteral(path, state) {\n        var nodes = [];\n\n        var expressions = path.get(\"expressions\");\n\n        for ( /*istanbul ignore next*/var _iterator2 = path.node.quasis, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2);;) {\n          /*istanbul ignore next*/\n          var _ref3;\n\n          if (_isArray2) {\n            if (_i2 >= _iterator2.length) break;\n            _ref3 = _iterator2[_i2++];\n          } else {\n            _i2 = _iterator2.next();\n            if (_i2.done) break;\n            _ref3 = _i2.value;\n          }\n\n          var elem = _ref3;\n\n          nodes.push(t.stringLiteral(elem.value.cooked));\n\n          var expr = expressions.shift();\n          if (expr) {\n            if (state.opts.spec && !expr.isBaseType(\"string\") && !expr.isBaseType(\"number\")) {\n              nodes.push(t.callExpression(t.identifier(\"String\"), [expr.node]));\n            } else {\n              nodes.push(expr.node);\n            }\n          }\n        }\n\n        // filter out empty string literals\n        nodes = nodes.filter(function (n) /*istanbul ignore next*/{\n          return !t.isLiteral(n, { value: \"\" });\n        });\n\n        // since `+` is left-to-right associative\n        // ensure the first node is a string if first/second isn't\n        if (!isString(nodes[0]) && !isString(nodes[1])) {\n          nodes.unshift(t.stringLiteral(\"\"));\n        }\n\n        if (nodes.length > 1) {\n          var root = buildBinaryExpression(nodes.shift(), nodes.shift());\n\n          for ( /*istanbul ignore next*/var _iterator3 = nodes, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : (0, _getIterator3.default)(_iterator3);;) {\n            /*istanbul ignore next*/\n            var _ref4;\n\n            if (_isArray3) {\n              if (_i3 >= _iterator3.length) break;\n              _ref4 = _iterator3[_i3++];\n            } else {\n              _i3 = _iterator3.next();\n              if (_i3.done) break;\n              _ref4 = _i3.value;\n            }\n\n            var node = _ref4;\n\n            root = buildBinaryExpression(root, node);\n          }\n\n          path.replaceWith(root);\n        } else {\n          path.replaceWith(nodes[0]);\n        }\n      }\n    }\n  };\n};\n\n/*istanbul ignore next*/\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = exports[\"default\"];"]}