{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\n\nvar _symbol = require(\"babel-runtime/core-js/symbol\");\n\nvar _symbol2 = _interopRequireDefault(_symbol);\n\nvar _create = require(\"babel-runtime/core-js/object/create\");\n\nvar _create2 = _interopRequireDefault(_create);\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nexports.default = function () {\n  return {\n    visitor: {\n      VariableDeclaration: function VariableDeclaration(path, file) {\n        var node = path.node;\n        var parent = path.parent;\n        var scope = path.scope;\n\n        if (!isBlockScoped(node)) return;\n        convertBlockScopedToVar(path, null, parent, scope, true);\n\n        if (node._tdzThis) {\n          var nodes = [node];\n\n          for (var i = 0; i < node.declarations.length; i++) {\n            var decl = node.declarations[i];\n            if (decl.init) {\n              var assign = t.assignmentExpression(\"=\", decl.id, decl.init);\n              assign._ignoreBlockScopingTDZ = true;\n              nodes.push(t.expressionStatement(assign));\n            }\n            decl.init = file.addHelper(\"temporalUndefined\");\n          }\n\n          node._blockHoist = 2;\n\n          if (path.isCompletionRecord()) {\n            nodes.push(t.expressionStatement(scope.buildUndefinedNode()));\n          }\n\n          path.replaceWithMultiple(nodes);\n        }\n      },\n      Loop: function Loop(path, file) {\n        var node = path.node;\n        var parent = path.parent;\n        var scope = path.scope;\n\n        t.ensureBlock(node);\n        var blockScoping = new BlockScoping(path, path.get(\"body\"), parent, scope, file);\n        var replace = blockScoping.run();\n        if (replace) path.replaceWith(replace);\n      },\n      CatchClause: function CatchClause(path, file) {\n        var parent = path.parent;\n        var scope = path.scope;\n\n        var blockScoping = new BlockScoping(null, path.get(\"body\"), parent, scope, file);\n        blockScoping.run();\n      },\n      \"BlockStatement|SwitchStatement|Program\": function BlockStatementSwitchStatementProgram(path, file) {\n        if (!ignoreBlock(path)) {\n          var blockScoping = new BlockScoping(null, path, path.parent, path.scope, file);\n          blockScoping.run();\n        }\n      }\n    }\n  };\n};\n\nvar _babelTraverse = require(\"babel-traverse\");\n\nvar _babelTraverse2 = _interopRequireDefault(_babelTraverse);\n\nvar _tdz = require(\"./tdz\");\n\nvar _babelTypes = require(\"babel-types\");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nvar _values = require(\"lodash/values\");\n\nvar _values2 = _interopRequireDefault(_values);\n\nvar _extend = require(\"lodash/extend\");\n\nvar _extend2 = _interopRequireDefault(_extend);\n\nvar _babelTemplate = require(\"babel-template\");\n\nvar _babelTemplate2 = _interopRequireDefault(_babelTemplate);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction ignoreBlock(path) {\n  return t.isLoop(path.parent) || t.isCatchClause(path.parent);\n}\n\nvar buildRetCheck = (0, _babelTemplate2.default)(\"\\n  if (typeof RETURN === \\\"object\\\") return RETURN.v;\\n\");\n\nfunction isBlockScoped(node) {\n  if (!t.isVariableDeclaration(node)) return false;\n  if (node[t.BLOCK_SCOPED_SYMBOL]) return true;\n  if (node.kind !== \"let\" && node.kind !== \"const\") return false;\n  return true;\n}\n\nfunction convertBlockScopedToVar(path, node, parent, scope) {\n  var moveBindingsToParent = arguments.length <= 4 || arguments[4] === undefined ? false : arguments[4];\n\n  if (!node) {\n    node = path.node;\n  }\n\n  if (!t.isFor(parent)) {\n    for (var i = 0; i < node.declarations.length; i++) {\n      var declar = node.declarations[i];\n      declar.init = declar.init || scope.buildUndefinedNode();\n    }\n  }\n\n  node[t.BLOCK_SCOPED_SYMBOL] = true;\n  node.kind = \"var\";\n\n  if (moveBindingsToParent) {\n    var parentScope = scope.getFunctionParent();\n    var ids = path.getBindingIdentifiers();\n    for (var name in ids) {\n      var binding = scope.getOwnBinding(name);\n      if (binding) binding.kind = \"var\";\n      scope.moveBindingTo(name, parentScope);\n    }\n  }\n}\n\nfunction isVar(node) {\n  return t.isVariableDeclaration(node, { kind: \"var\" }) && !isBlockScoped(node);\n}\n\nvar letReferenceBlockVisitor = _babelTraverse2.default.visitors.merge([{\n  Function: function Function(path, state) {\n    path.traverse(letReferenceFunctionVisitor, state);\n    return path.skip();\n  }\n}, _tdz.visitor]);\n\nvar letReferenceFunctionVisitor = _babelTraverse2.default.visitors.merge([{\n  ReferencedIdentifier: function ReferencedIdentifier(path, state) {\n    var ref = state.letReferences[path.node.name];\n\n    if (!ref) return;\n\n    var localBinding = path.scope.getBindingIdentifier(path.node.name);\n    if (localBinding && localBinding !== ref) return;\n\n    state.closurify = true;\n  }\n}, _tdz.visitor]);\n\nvar hoistVarDeclarationsVisitor = {\n  enter: function enter(path, self) {\n    var node = path.node;\n    var parent = path.parent;\n\n\n    if (path.isForStatement()) {\n      if (isVar(node.init, node)) {\n        var nodes = self.pushDeclar(node.init);\n        if (nodes.length === 1) {\n          node.init = nodes[0];\n        } else {\n          node.init = t.sequenceExpression(nodes);\n        }\n      }\n    } else if (path.isFor()) {\n      if (isVar(node.left, node)) {\n        self.pushDeclar(node.left);\n        node.left = node.left.declarations[0].id;\n      }\n    } else if (isVar(node, parent)) {\n      path.replaceWithMultiple(self.pushDeclar(node).map(function (expr) {\n        return t.expressionStatement(expr);\n      }));\n    } else if (path.isFunction()) {\n      return path.skip();\n    }\n  }\n};\n\nvar loopLabelVisitor = {\n  LabeledStatement: function LabeledStatement(_ref, state) {\n    var node = _ref.node;\n\n    state.innerLabels.push(node.label.name);\n  }\n};\n\nvar continuationVisitor = {\n  enter: function enter(path, state) {\n    if (path.isAssignmentExpression() || path.isUpdateExpression()) {\n      var bindings = path.getBindingIdentifiers();\n      for (var name in bindings) {\n        if (state.outsideReferences[name] !== path.scope.getBindingIdentifier(name)) continue;\n        state.reassignments[name] = true;\n      }\n    }\n  }\n};\n\nfunction loopNodeTo(node) {\n  if (t.isBreakStatement(node)) {\n    return \"break\";\n  } else if (t.isContinueStatement(node)) {\n    return \"continue\";\n  }\n}\n\nvar loopVisitor = {\n  Loop: function Loop(path, state) {\n    var oldIgnoreLabeless = state.ignoreLabeless;\n    state.ignoreLabeless = true;\n    path.traverse(loopVisitor, state);\n    state.ignoreLabeless = oldIgnoreLabeless;\n    path.skip();\n  },\n  Function: function Function(path) {\n    path.skip();\n  },\n  SwitchCase: function SwitchCase(path, state) {\n    var oldInSwitchCase = state.inSwitchCase;\n    state.inSwitchCase = true;\n    path.traverse(loopVisitor, state);\n    state.inSwitchCase = oldInSwitchCase;\n    path.skip();\n  },\n  \"BreakStatement|ContinueStatement|ReturnStatement\": function BreakStatementContinueStatementReturnStatement(path, state) {\n    var node = path.node;\n    var parent = path.parent;\n    var scope = path.scope;\n\n    if (node[this.LOOP_IGNORE]) return;\n\n    var replace = void 0;\n    var loopText = loopNodeTo(node);\n\n    if (loopText) {\n      if (node.label) {\n        if (state.innerLabels.indexOf(node.label.name) >= 0) {\n          return;\n        }\n\n        loopText = loopText + \"|\" + node.label.name;\n      } else {\n        if (state.ignoreLabeless) return;\n\n        if (state.inSwitchCase) return;\n\n        if (t.isBreakStatement(node) && t.isSwitchCase(parent)) return;\n      }\n\n      state.hasBreakContinue = true;\n      state.map[loopText] = node;\n      replace = t.stringLiteral(loopText);\n    }\n\n    if (path.isReturnStatement()) {\n      state.hasReturn = true;\n      replace = t.objectExpression([t.objectProperty(t.identifier(\"v\"), node.argument || scope.buildUndefinedNode())]);\n    }\n\n    if (replace) {\n      replace = t.returnStatement(replace);\n      replace[this.LOOP_IGNORE] = true;\n      path.skip();\n      path.replaceWith(t.inherits(replace, node));\n    }\n  }\n};\n\nvar BlockScoping = function () {\n  function BlockScoping(loopPath, blockPath, parent, scope, file) {\n    (0, _classCallCheck3.default)(this, BlockScoping);\n\n    this.parent = parent;\n    this.scope = scope;\n    this.file = file;\n\n    this.blockPath = blockPath;\n    this.block = blockPath.node;\n\n    this.outsideLetReferences = (0, _create2.default)(null);\n    this.hasLetReferences = false;\n    this.letReferences = (0, _create2.default)(null);\n    this.body = [];\n\n    if (loopPath) {\n      this.loopParent = loopPath.parent;\n      this.loopLabel = t.isLabeledStatement(this.loopParent) && this.loopParent.label;\n      this.loopPath = loopPath;\n      this.loop = loopPath.node;\n    }\n  }\n\n  BlockScoping.prototype.run = function run() {\n    var block = this.block;\n    if (block._letDone) return;\n    block._letDone = true;\n\n    var needsClosure = this.getLetReferences();\n\n    if (t.isFunction(this.parent) || t.isProgram(this.block)) {\n      this.updateScopeInfo();\n      return;\n    }\n\n    if (!this.hasLetReferences) return;\n\n    if (needsClosure) {\n      this.wrapClosure();\n    } else {\n      this.remap();\n    }\n\n    this.updateScopeInfo();\n\n    if (this.loopLabel && !t.isLabeledStatement(this.loopParent)) {\n      return t.labeledStatement(this.loopLabel, this.loop);\n    }\n  };\n\n  BlockScoping.prototype.updateScopeInfo = function updateScopeInfo() {\n    var scope = this.scope;\n    var parentScope = scope.getFunctionParent();\n    var letRefs = this.letReferences;\n\n    for (var key in letRefs) {\n      var ref = letRefs[key];\n      var binding = scope.getBinding(ref.name);\n      if (!binding) continue;\n      if (binding.kind === \"let\" || binding.kind === \"const\") {\n        binding.kind = \"var\";\n        scope.moveBindingTo(ref.name, parentScope);\n      }\n    }\n  };\n\n  BlockScoping.prototype.remap = function remap() {\n    var letRefs = this.letReferences;\n    var scope = this.scope;\n\n    for (var key in letRefs) {\n      var ref = letRefs[key];\n\n      if (scope.parentHasBinding(key) || scope.hasGlobal(key)) {\n        if (scope.hasOwnBinding(key)) scope.rename(ref.name);\n\n        if (this.blockPath.scope.hasOwnBinding(key)) this.blockPath.scope.rename(ref.name);\n      }\n    }\n  };\n\n  BlockScoping.prototype.wrapClosure = function wrapClosure() {\n    var block = this.block;\n\n    var outsideRefs = this.outsideLetReferences;\n\n    if (this.loop) {\n      for (var name in outsideRefs) {\n        var id = outsideRefs[name];\n\n        if (this.scope.hasGlobal(id.name) || this.scope.parentHasBinding(id.name)) {\n          delete outsideRefs[id.name];\n          delete this.letReferences[id.name];\n\n          this.scope.rename(id.name);\n\n          this.letReferences[id.name] = id;\n          outsideRefs[id.name] = id;\n        }\n      }\n    }\n\n    this.has = this.checkLoop();\n\n    this.hoistVarDeclarations();\n\n    var params = (0, _values2.default)(outsideRefs);\n    var args = (0, _values2.default)(outsideRefs);\n\n    var isSwitch = this.blockPath.isSwitchStatement();\n\n    var fn = t.functionExpression(null, params, t.blockStatement(isSwitch ? [block] : block.body));\n    fn.shadow = true;\n\n    this.addContinuations(fn);\n\n    var ref = fn;\n\n    if (this.loop) {\n      ref = this.scope.generateUidIdentifier(\"loop\");\n      this.loopPath.insertBefore(t.variableDeclaration(\"var\", [t.variableDeclarator(ref, fn)]));\n    }\n\n    var call = t.callExpression(ref, args);\n    var ret = this.scope.generateUidIdentifier(\"ret\");\n\n    var hasYield = _babelTraverse2.default.hasType(fn.body, this.scope, \"YieldExpression\", t.FUNCTION_TYPES);\n    if (hasYield) {\n      fn.generator = true;\n      call = t.yieldExpression(call, true);\n    }\n\n    var hasAsync = _babelTraverse2.default.hasType(fn.body, this.scope, \"AwaitExpression\", t.FUNCTION_TYPES);\n    if (hasAsync) {\n      fn.async = true;\n      call = t.awaitExpression(call);\n    }\n\n    this.buildClosure(ret, call);\n\n    if (isSwitch) this.blockPath.replaceWithMultiple(this.body);else block.body = this.body;\n  };\n\n  BlockScoping.prototype.buildClosure = function buildClosure(ret, call) {\n    var has = this.has;\n    if (has.hasReturn || has.hasBreakContinue) {\n      this.buildHas(ret, call);\n    } else {\n      this.body.push(t.expressionStatement(call));\n    }\n  };\n\n  BlockScoping.prototype.addContinuations = function addContinuations(fn) {\n    var state = {\n      reassignments: {},\n      outsideReferences: this.outsideLetReferences\n    };\n\n    this.scope.traverse(fn, continuationVisitor, state);\n\n    for (var i = 0; i < fn.params.length; i++) {\n      var param = fn.params[i];\n      if (!state.reassignments[param.name]) continue;\n\n      var newParam = this.scope.generateUidIdentifier(param.name);\n      fn.params[i] = newParam;\n\n      this.scope.rename(param.name, newParam.name, fn);\n\n      fn.body.body.push(t.expressionStatement(t.assignmentExpression(\"=\", param, newParam)));\n    }\n  };\n\n  BlockScoping.prototype.getLetReferences = function getLetReferences() {\n    var block = this.block;\n\n    var declarators = [];\n\n    if (this.loop) {\n      var init = this.loop.left || this.loop.init;\n      if (isBlockScoped(init)) {\n        declarators.push(init);\n        (0, _extend2.default)(this.outsideLetReferences, t.getBindingIdentifiers(init));\n      }\n    }\n\n    if (block.body) {\n      for (var i = 0; i < block.body.length; i++) {\n        var declar = block.body[i];\n        if (t.isClassDeclaration(declar) || t.isFunctionDeclaration(declar) || isBlockScoped(declar)) {\n          var declarPath = this.blockPath.get(\"body\")[i];\n          if (isBlockScoped(declar)) {\n            convertBlockScopedToVar(declarPath, null, block, this.scope);\n          }\n          declarators = declarators.concat(declar.declarations || declar);\n        }\n      }\n    }\n\n    if (block.cases) {\n      for (var _i = 0; _i < block.cases.length; _i++) {\n        var consequents = block.cases[_i].consequent;\n\n        for (var j = 0; j < consequents.length; j++) {\n          var _declar = consequents[j];\n          if (t.isClassDeclaration(_declar) || t.isFunctionDeclaration(_declar) || isBlockScoped(_declar)) {\n            var _declarPath = this.blockPath.get(\"cases\")[_i];\n            if (isBlockScoped(_declar)) {\n              convertBlockScopedToVar(_declarPath, _declar, block, this.scope);\n            }\n            declarators = declarators.concat(_declar.declarations || _declar);\n          }\n        }\n      }\n    }\n\n    for (var _i2 = 0; _i2 < declarators.length; _i2++) {\n      var _declar2 = declarators[_i2];\n      var keys = t.getBindingIdentifiers(_declar2);\n      (0, _extend2.default)(this.letReferences, keys);\n      this.hasLetReferences = true;\n    }\n\n    if (!this.hasLetReferences) return;\n\n    var state = {\n      letReferences: this.letReferences,\n      closurify: false,\n      file: this.file\n    };\n\n    this.blockPath.traverse(letReferenceBlockVisitor, state);\n\n    return state.closurify;\n  };\n\n  BlockScoping.prototype.checkLoop = function checkLoop() {\n    var state = {\n      hasBreakContinue: false,\n      ignoreLabeless: false,\n      inSwitchCase: false,\n      innerLabels: [],\n      hasReturn: false,\n      isLoop: !!this.loop,\n      map: {},\n      LOOP_IGNORE: (0, _symbol2.default)()\n    };\n\n    this.blockPath.traverse(loopLabelVisitor, state);\n    this.blockPath.traverse(loopVisitor, state);\n\n    return state;\n  };\n\n  BlockScoping.prototype.hoistVarDeclarations = function hoistVarDeclarations() {\n    this.blockPath.traverse(hoistVarDeclarationsVisitor, this);\n  };\n\n  BlockScoping.prototype.pushDeclar = function pushDeclar(node) {\n    var declars = [];\n    var names = t.getBindingIdentifiers(node);\n    for (var name in names) {\n      declars.push(t.variableDeclarator(names[name]));\n    }\n\n    this.body.push(t.variableDeclaration(node.kind, declars));\n\n    var replace = [];\n\n    for (var i = 0; i < node.declarations.length; i++) {\n      var declar = node.declarations[i];\n      if (!declar.init) continue;\n\n      var expr = t.assignmentExpression(\"=\", declar.id, declar.init);\n      replace.push(t.inherits(expr, declar));\n    }\n\n    return replace;\n  };\n\n  BlockScoping.prototype.buildHas = function buildHas(ret, call) {\n    var body = this.body;\n\n    body.push(t.variableDeclaration(\"var\", [t.variableDeclarator(ret, call)]));\n\n    var retCheck = void 0;\n    var has = this.has;\n    var cases = [];\n\n    if (has.hasReturn) {\n      retCheck = buildRetCheck({\n        RETURN: ret\n      });\n    }\n\n    if (has.hasBreakContinue) {\n      for (var key in has.map) {\n        cases.push(t.switchCase(t.stringLiteral(key), [has.map[key]]));\n      }\n\n      if (has.hasReturn) {\n        cases.push(t.switchCase(null, [retCheck]));\n      }\n\n      if (cases.length === 1) {\n        var single = cases[0];\n        body.push(t.ifStatement(t.binaryExpression(\"===\", ret, single.test), single.consequent[0]));\n      } else {\n        if (this.loop) {\n          for (var i = 0; i < cases.length; i++) {\n            var caseConsequent = cases[i].consequent[0];\n            if (t.isBreakStatement(caseConsequent) && !caseConsequent.label) {\n              caseConsequent.label = this.loopLabel = this.loopLabel || this.scope.generateUidIdentifier(\"loop\");\n            }\n          }\n        }\n\n        body.push(t.switchStatement(ret, cases));\n      }\n    } else {\n      if (has.hasReturn) {\n        body.push(retCheck);\n      }\n    }\n  };\n\n  return BlockScoping;\n}();\n\nmodule.exports = exports[\"default\"];"]}