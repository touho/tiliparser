{"version":3,"sources":["regenerate.js"],"names":[],"mappings":"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","file":"regenerate-compiled.js","sourcesContent":["/*! https://mths.be/regenerate v1.3.1 by @mathias | MIT license */\n;(function(root) {\n\n\t// Detect free variables `exports`.\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`.\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js/io.js or Browserified code,\n\t// and use it as `root`.\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar ERRORS = {\n\t\t'rangeOrder': 'A range\\u2019s `stop` value must be greater than or equal ' +\n\t\t\t'to the `start` value.',\n\t\t'codePointRange': 'Invalid code point value. Code points range from ' +\n\t\t\t'U+000000 to U+10FFFF.'\n\t};\n\n\t// https://mathiasbynens.be/notes/javascript-encoding#surrogate-pairs\n\tvar HIGH_SURROGATE_MIN = 0xD800;\n\tvar HIGH_SURROGATE_MAX = 0xDBFF;\n\tvar LOW_SURROGATE_MIN = 0xDC00;\n\tvar LOW_SURROGATE_MAX = 0xDFFF;\n\n\t// In Regenerate output, `\\0` is never preceded by `\\` because we sort by\n\t// code point value, so let’s keep this regular expression simple.\n\tvar regexNull = /\\\\x00([^0123456789]|$)/g;\n\n\tvar object = {};\n\tvar hasOwnProperty = object.hasOwnProperty;\n\tvar extend = function(destination, source) {\n\t\tvar key;\n\t\tfor (key in source) {\n\t\t\tif (hasOwnProperty.call(source, key)) {\n\t\t\t\tdestination[key] = source[key];\n\t\t\t}\n\t\t}\n\t\treturn destination;\n\t};\n\n\tvar forEach = function(array, callback) {\n\t\tvar index = -1;\n\t\tvar length = array.length;\n\t\twhile (++index < length) {\n\t\t\tcallback(array[index], index);\n\t\t}\n\t};\n\n\tvar toString = object.toString;\n\tvar isArray = function(value) {\n\t\treturn toString.call(value) == '[object Array]';\n\t};\n\tvar isNumber = function(value) {\n\t\treturn typeof value == 'number' ||\n\t\t\ttoString.call(value) == '[object Number]';\n\t};\n\n\t// This assumes that `number` is a positive integer that `toString()`s nicely\n\t// (which is the case for all code point values).\n\tvar zeroes = '0000';\n\tvar pad = function(number, totalCharacters) {\n\t\tvar string = String(number);\n\t\treturn string.length < totalCharacters\n\t\t\t? (zeroes + string).slice(-totalCharacters)\n\t\t\t: string;\n\t};\n\n\tvar hex = function(number) {\n\t\treturn Number(number).toString(16).toUpperCase();\n\t};\n\n\tvar slice = [].slice;\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar dataFromCodePoints = function(codePoints) {\n\t\tvar index = -1;\n\t\tvar length = codePoints.length;\n\t\tvar max = length - 1;\n\t\tvar result = [];\n\t\tvar isStart = true;\n\t\tvar tmp;\n\t\tvar previous = 0;\n\t\twhile (++index < length) {\n\t\t\ttmp = codePoints[index];\n\t\t\tif (isStart) {\n\t\t\t\tresult.push(tmp);\n\t\t\t\tprevious = tmp;\n\t\t\t\tisStart = false;\n\t\t\t} else {\n\t\t\t\tif (tmp == previous + 1) {\n\t\t\t\t\tif (index != max) {\n\t\t\t\t\t\tprevious = tmp;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tisStart = true;\n\t\t\t\t\t\tresult.push(tmp + 1);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// End the previous range and start a new one.\n\t\t\t\t\tresult.push(previous + 1, tmp);\n\t\t\t\t\tprevious = tmp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!isStart) {\n\t\t\tresult.push(tmp + 1);\n\t\t}\n\t\treturn result;\n\t};\n\n\tvar dataRemove = function(data, codePoint) {\n\t\t// Iterate over the data per `(start, end)` pair.\n\t\tvar index = 0;\n\t\tvar start;\n\t\tvar end;\n\t\tvar length = data.length;\n\t\twhile (index < length) {\n\t\t\tstart = data[index];\n\t\t\tend = data[index + 1];\n\t\t\tif (codePoint >= start && codePoint < end) {\n\t\t\t\t// Modify this pair.\n\t\t\t\tif (codePoint == start) {\n\t\t\t\t\tif (end == start + 1) {\n\t\t\t\t\t\t// Just remove `start` and `end`.\n\t\t\t\t\t\tdata.splice(index, 2);\n\t\t\t\t\t\treturn data;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Just replace `start` with a new value.\n\t\t\t\t\t\tdata[index] = codePoint + 1;\n\t\t\t\t\t\treturn data;\n\t\t\t\t\t}\n\t\t\t\t} else if (codePoint == end - 1) {\n\t\t\t\t\t// Just replace `end` with a new value.\n\t\t\t\t\tdata[index + 1] = codePoint;\n\t\t\t\t\treturn data;\n\t\t\t\t} else {\n\t\t\t\t\t// Replace `[start, end]` with `[startA, endA, startB, endB]`.\n\t\t\t\t\tdata.splice(index, 2, start, codePoint, codePoint + 1, end);\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\t\t\t}\n\t\t\tindex += 2;\n\t\t}\n\t\treturn data;\n\t};\n\n\tvar dataRemoveRange = function(data, rangeStart, rangeEnd) {\n\t\tif (rangeEnd < rangeStart) {\n\t\t\tthrow Error(ERRORS.rangeOrder);\n\t\t}\n\t\t// Iterate over the data per `(start, end)` pair.\n\t\tvar index = 0;\n\t\tvar start;\n\t\tvar end;\n\t\twhile (index < data.length) {\n\t\t\tstart = data[index];\n\t\t\tend = data[index + 1] - 1; // Note: the `- 1` makes `end` inclusive.\n\n\t\t\t// Exit as soon as no more matching pairs can be found.\n\t\t\tif (start > rangeEnd) {\n\t\t\t\treturn data;\n\t\t\t}\n\n\t\t\t// Check if this range pair is equal to, or forms a subset of, the range\n\t\t\t// to be removed.\n\t\t\t// E.g. we have `[0, 11, 40, 51]` and want to remove 0-10 → `[40, 51]`.\n\t\t\t// E.g. we have `[40, 51]` and want to remove 0-100 → `[]`.\n\t\t\tif (rangeStart <= start && rangeEnd >= end) {\n\t\t\t\t// Remove this pair.\n\t\t\t\tdata.splice(index, 2);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Check if both `rangeStart` and `rangeEnd` are within the bounds of\n\t\t\t// this pair.\n\t\t\t// E.g. we have `[0, 11]` and want to remove 4-6 → `[0, 4, 7, 11]`.\n\t\t\tif (rangeStart >= start && rangeEnd < end) {\n\t\t\t\tif (rangeStart == start) {\n\t\t\t\t\t// Replace `[start, end]` with `[startB, endB]`.\n\t\t\t\t\tdata[index] = rangeEnd + 1;\n\t\t\t\t\tdata[index + 1] = end + 1;\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\t\t\t\t// Replace `[start, end]` with `[startA, endA, startB, endB]`.\n\t\t\t\tdata.splice(index, 2, start, rangeStart, rangeEnd + 1, end + 1);\n\t\t\t\treturn data;\n\t\t\t}\n\n\t\t\t// Check if only `rangeStart` is within the bounds of this pair.\n\t\t\t// E.g. we have `[0, 11]` and want to remove 4-20 → `[0, 4]`.\n\t\t\tif (rangeStart >= start && rangeStart <= end) {\n\t\t\t\t// Replace `end` with `rangeStart`.\n\t\t\t\tdata[index + 1] = rangeStart;\n\t\t\t\t// Note: we cannot `return` just yet, in case any following pairs still\n\t\t\t\t// contain matching code points.\n\t\t\t\t// E.g. we have `[0, 11, 14, 31]` and want to remove 4-20\n\t\t\t\t// → `[0, 4, 21, 31]`.\n\t\t\t}\n\n\t\t\t// Check if only `rangeEnd` is within the bounds of this pair.\n\t\t\t// E.g. we have `[14, 31]` and want to remove 4-20 → `[21, 31]`.\n\t\t\telse if (rangeEnd >= start && rangeEnd <= end) {\n\t\t\t\t// Just replace `start`.\n\t\t\t\tdata[index] = rangeEnd + 1;\n\t\t\t\treturn data;\n\t\t\t}\n\n\t\t\tindex += 2;\n\t\t}\n\t\treturn data;\n\t};\n\n\t var dataAdd = function(data, codePoint) {\n\t\t// Iterate over the data per `(start, end)` pair.\n\t\tvar index = 0;\n\t\tvar start;\n\t\tvar end;\n\t\tvar lastIndex = null;\n\t\tvar length = data.length;\n\t\tif (codePoint < 0x0 || codePoint > 0x10FFFF) {\n\t\t\tthrow RangeError(ERRORS.codePointRange);\n\t\t}\n\t\twhile (index < length) {\n\t\t\tstart = data[index];\n\t\t\tend = data[index + 1];\n\n\t\t\t// Check if the code point is already in the set.\n\t\t\tif (codePoint >= start && codePoint < end) {\n\t\t\t\treturn data;\n\t\t\t}\n\n\t\t\tif (codePoint == start - 1) {\n\t\t\t\t// Just replace `start` with a new value.\n\t\t\t\tdata[index] = codePoint;\n\t\t\t\treturn data;\n\t\t\t}\n\n\t\t\t// At this point, if `start` is `greater` than `codePoint`, insert a new\n\t\t\t// `[start, end]` pair before the current pair, or after the current pair\n\t\t\t// if there is a known `lastIndex`.\n\t\t\tif (start > codePoint) {\n\t\t\t\tdata.splice(\n\t\t\t\t\tlastIndex != null ? lastIndex + 2 : 0,\n\t\t\t\t\t0,\n\t\t\t\t\tcodePoint,\n\t\t\t\t\tcodePoint + 1\n\t\t\t\t);\n\t\t\t\treturn data;\n\t\t\t}\n\n\t\t\tif (codePoint == end) {\n\t\t\t\t// Check if adding this code point causes two separate ranges to become\n\t\t\t\t// a single range, e.g. `dataAdd([0, 4, 5, 10], 4)` → `[0, 10]`.\n\t\t\t\tif (codePoint + 1 == data[index + 2]) {\n\t\t\t\t\tdata.splice(index, 4, start, data[index + 3]);\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\t\t\t\t// Else, just replace `end` with a new value.\n\t\t\t\tdata[index + 1] = codePoint + 1;\n\t\t\t\treturn data;\n\t\t\t}\n\t\t\tlastIndex = index;\n\t\t\tindex += 2;\n\t\t}\n\t\t// The loop has finished; add the new pair to the end of the data set.\n\t\tdata.push(codePoint, codePoint + 1);\n\t\treturn data;\n\t};\n\n\tvar dataAddData = function(dataA, dataB) {\n\t\t// Iterate over the data per `(start, end)` pair.\n\t\tvar index = 0;\n\t\tvar start;\n\t\tvar end;\n\t\tvar data = dataA.slice();\n\t\tvar length = dataB.length;\n\t\twhile (index < length) {\n\t\t\tstart = dataB[index];\n\t\t\tend = dataB[index + 1] - 1;\n\t\t\tif (start == end) {\n\t\t\t\tdata = dataAdd(data, start);\n\t\t\t} else {\n\t\t\t\tdata = dataAddRange(data, start, end);\n\t\t\t}\n\t\t\tindex += 2;\n\t\t}\n\t\treturn data;\n\t};\n\n\tvar dataRemoveData = function(dataA, dataB) {\n\t\t// Iterate over the data per `(start, end)` pair.\n\t\tvar index = 0;\n\t\tvar start;\n\t\tvar end;\n\t\tvar data = dataA.slice();\n\t\tvar length = dataB.length;\n\t\twhile (index < length) {\n\t\t\tstart = dataB[index];\n\t\t\tend = dataB[index + 1] - 1;\n\t\t\tif (start == end) {\n\t\t\t\tdata = dataRemove(data, start);\n\t\t\t} else {\n\t\t\t\tdata = dataRemoveRange(data, start, end);\n\t\t\t}\n\t\t\tindex += 2;\n\t\t}\n\t\treturn data;\n\t};\n\n\tvar dataAddRange = function(data, rangeStart, rangeEnd) {\n\t\tif (rangeEnd < rangeStart) {\n\t\t\tthrow Error(ERRORS.rangeOrder);\n\t\t}\n\t\tif (\n\t\t\trangeStart < 0x0 || rangeStart > 0x10FFFF ||\n\t\t\trangeEnd < 0x0 || rangeEnd > 0x10FFFF\n\t\t) {\n\t\t\tthrow RangeError(ERRORS.codePointRange);\n\t\t}\n\t\t// Iterate over the data per `(start, end)` pair.\n\t\tvar index = 0;\n\t\tvar start;\n\t\tvar end;\n\t\tvar added = false;\n\t\tvar length = data.length;\n\t\twhile (index < length) {\n\t\t\tstart = data[index];\n\t\t\tend = data[index + 1];\n\n\t\t\tif (added) {\n\t\t\t\t// The range has already been added to the set; at this point, we just\n\t\t\t\t// need to get rid of the following ranges in case they overlap.\n\n\t\t\t\t// Check if this range can be combined with the previous range.\n\t\t\t\tif (start == rangeEnd + 1) {\n\t\t\t\t\tdata.splice(index - 1, 2);\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// Exit as soon as no more possibly overlapping pairs can be found.\n\t\t\t\tif (start > rangeEnd) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// E.g. `[0, 11, 12, 16]` and we’ve added 5-15, so we now have\n\t\t\t\t// `[0, 16, 12, 16]`. Remove the `12,16` part, as it lies within the\n\t\t\t\t// `0,16` range that was previously added.\n\t\t\t\tif (start >= rangeStart && start <= rangeEnd) {\n\t\t\t\t\t// `start` lies within the range that was previously added.\n\n\t\t\t\t\tif (end > rangeStart && end - 1 <= rangeEnd) {\n\t\t\t\t\t\t// `end` lies within the range that was previously added as well,\n\t\t\t\t\t\t// so remove this pair.\n\t\t\t\t\t\tdata.splice(index, 2);\n\t\t\t\t\t\tindex -= 2;\n\t\t\t\t\t\t// Note: we cannot `return` just yet, as there may still be other\n\t\t\t\t\t\t// overlapping pairs.\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// `start` lies within the range that was previously added, but\n\t\t\t\t\t\t// `end` doesn’t. E.g. `[0, 11, 12, 31]` and we’ve added 5-15, so\n\t\t\t\t\t\t// now we have `[0, 16, 12, 31]`. This must be written as `[0, 31]`.\n\t\t\t\t\t\t// Remove the previously added `end` and the current `start`.\n\t\t\t\t\t\tdata.splice(index - 1, 2);\n\t\t\t\t\t\tindex -= 2;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Note: we cannot return yet.\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\telse if (start == rangeEnd + 1) {\n\t\t\t\tdata[index] = rangeStart;\n\t\t\t\treturn data;\n\t\t\t}\n\n\t\t\t// Check if a new pair must be inserted *before* the current one.\n\t\t\telse if (start > rangeEnd) {\n\t\t\t\tdata.splice(index, 0, rangeStart, rangeEnd + 1);\n\t\t\t\treturn data;\n\t\t\t}\n\n\t\t\telse if (rangeStart >= start && rangeStart < end && rangeEnd + 1 <= end) {\n\t\t\t\t// The new range lies entirely within an existing range pair. No action\n\t\t\t\t// needed.\n\t\t\t\treturn data;\n\t\t\t}\n\n\t\t\telse if (\n\t\t\t\t// E.g. `[0, 11]` and you add 5-15 → `[0, 16]`.\n\t\t\t\t(rangeStart >= start && rangeStart < end) ||\n\t\t\t\t// E.g. `[0, 3]` and you add 3-6 → `[0, 7]`.\n\t\t\t\tend == rangeStart\n\t\t\t) {\n\t\t\t\t// Replace `end` with the new value.\n\t\t\t\tdata[index + 1] = rangeEnd + 1;\n\t\t\t\t// Make sure the next range pair doesn’t overlap, e.g. `[0, 11, 12, 14]`\n\t\t\t\t// and you add 5-15 → `[0, 16]`, i.e. remove the `12,14` part.\n\t\t\t\tadded = true;\n\t\t\t\t// Note: we cannot `return` just yet.\n\t\t\t}\n\n\t\t\telse if (rangeStart <= start && rangeEnd + 1 >= end) {\n\t\t\t\t// The new range is a superset of the old range.\n\t\t\t\tdata[index] = rangeStart;\n\t\t\t\tdata[index + 1] = rangeEnd + 1;\n\t\t\t\tadded = true;\n\t\t\t}\n\n\t\t\tindex += 2;\n\t\t}\n\t\t// The loop has finished without doing anything; add the new pair to the end\n\t\t// of the data set.\n\t\tif (!added) {\n\t\t\tdata.push(rangeStart, rangeEnd + 1);\n\t\t}\n\t\treturn data;\n\t};\n\n\tvar dataContains = function(data, codePoint) {\n\t\tvar index = 0;\n\t\tvar length = data.length;\n\t\t// Exit early if `codePoint` is not within `data`’s overall range.\n\t\tvar start = data[index];\n\t\tvar end = data[length - 1];\n\t\tif (length >= 2) {\n\t\t\tif (codePoint < start || codePoint > end) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\t// Iterate over the data per `(start, end)` pair.\n\t\twhile (index < length) {\n\t\t\tstart = data[index];\n\t\t\tend = data[index + 1];\n\t\t\tif (codePoint >= start && codePoint < end) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tindex += 2;\n\t\t}\n\t\treturn false;\n\t};\n\n\tvar dataIntersection = function(data, codePoints) {\n\t\tvar index = 0;\n\t\tvar length = codePoints.length;\n\t\tvar codePoint;\n\t\tvar result = [];\n\t\twhile (index < length) {\n\t\t\tcodePoint = codePoints[index];\n\t\t\tif (dataContains(data, codePoint)) {\n\t\t\t\tresult.push(codePoint);\n\t\t\t}\n\t\t\t++index;\n\t\t}\n\t\treturn dataFromCodePoints(result);\n\t};\n\n\tvar dataIsEmpty = function(data) {\n\t\treturn !data.length;\n\t};\n\n\tvar dataIsSingleton = function(data) {\n\t\t// Check if the set only represents a single code point.\n\t\treturn data.length == 2 && data[0] + 1 == data[1];\n\t};\n\n\tvar dataToArray = function(data) {\n\t\t// Iterate over the data per `(start, end)` pair.\n\t\tvar index = 0;\n\t\tvar start;\n\t\tvar end;\n\t\tvar result = [];\n\t\tvar length = data.length;\n\t\twhile (index < length) {\n\t\t\tstart = data[index];\n\t\t\tend = data[index + 1];\n\t\t\twhile (start < end) {\n\t\t\t\tresult.push(start);\n\t\t\t\t++start;\n\t\t\t}\n\t\t\tindex += 2;\n\t\t}\n\t\treturn result;\n\t};\n\n\t/*--------------------------------------------------------------------------*/\n\n\t// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n\tvar floor = Math.floor;\n\tvar highSurrogate = function(codePoint) {\n\t\treturn parseInt(\n\t\t\tfloor((codePoint - 0x10000) / 0x400) + HIGH_SURROGATE_MIN,\n\t\t\t10\n\t\t);\n\t};\n\n\tvar lowSurrogate = function(codePoint) {\n\t\treturn parseInt(\n\t\t\t(codePoint - 0x10000) % 0x400 + LOW_SURROGATE_MIN,\n\t\t\t10\n\t\t);\n\t};\n\n\tvar stringFromCharCode = String.fromCharCode;\n\tvar codePointToString = function(codePoint) {\n\t\tvar string;\n\t\t// https://mathiasbynens.be/notes/javascript-escapes#single\n\t\t// Note: the `\\b` escape sequence for U+0008 BACKSPACE in strings has a\n\t\t// different meaning in regular expressions (word boundary), so it cannot\n\t\t// be used here.\n\t\tif (codePoint == 0x09) {\n\t\t\tstring = '\\\\t';\n\t\t}\n\t\t// Note: IE < 9 treats `'\\v'` as `'v'`, so avoid using it.\n\t\t// else if (codePoint == 0x0B) {\n\t\t// \tstring = '\\\\v';\n\t\t// }\n\t\telse if (codePoint == 0x0A) {\n\t\t\tstring = '\\\\n';\n\t\t}\n\t\telse if (codePoint == 0x0C) {\n\t\t\tstring = '\\\\f';\n\t\t}\n\t\telse if (codePoint == 0x0D) {\n\t\t\tstring = '\\\\r';\n\t\t}\n\t\telse if (codePoint == 0x5C) {\n\t\t\tstring = '\\\\\\\\';\n\t\t}\n\t\telse if (\n\t\t\tcodePoint == 0x24 ||\n\t\t\t(codePoint >= 0x28 && codePoint <= 0x2B) ||\n\t\t\tcodePoint == 0x2D || codePoint == 0x2E || codePoint == 0x3F ||\n\t\t\t(codePoint >= 0x5B && codePoint <= 0x5E) ||\n\t\t\t(codePoint >= 0x7B && codePoint <= 0x7D)\n\t\t) {\n\t\t\t// The code point maps to an unsafe printable ASCII character;\n\t\t\t// backslash-escape it. Here’s the list of those symbols:\n\t\t\t//\n\t\t\t//     $()*+-.?[\\]^{|}\n\t\t\t//\n\t\t\t// See #7 for more info.\n\t\t\tstring = '\\\\' + stringFromCharCode(codePoint);\n\t\t}\n\t\telse if (codePoint >= 0x20 && codePoint <= 0x7E) {\n\t\t\t// The code point maps to one of these printable ASCII symbols\n\t\t\t// (including the space character):\n\t\t\t//\n\t\t\t//      !\"#%&',/0123456789:;<=>@ABCDEFGHIJKLMNO\n\t\t\t//     PQRSTUVWXYZ_`abcdefghijklmnopqrstuvwxyz~\n\t\t\t//\n\t\t\t// These can safely be used directly.\n\t\t\tstring = stringFromCharCode(codePoint);\n\t\t}\n\t\telse if (codePoint <= 0xFF) {\n\t\t\t// https://mathiasbynens.be/notes/javascript-escapes#hexadecimal\n\t\t\tstring = '\\\\x' + pad(hex(codePoint), 2);\n\t\t}\n\t\telse { // `codePoint <= 0xFFFF` holds true.\n\t\t\t// https://mathiasbynens.be/notes/javascript-escapes#unicode\n\t\t\tstring = '\\\\u' + pad(hex(codePoint), 4);\n\t\t}\n\n\t\t// There’s no need to account for astral symbols / surrogate pairs here,\n\t\t// since `codePointToString` is private and only used for BMP code points.\n\t\t// But if that’s what you need, just add an `else` block with this code:\n\t\t//\n\t\t//     string = '\\\\u' + pad(hex(highSurrogate(codePoint)), 4)\n\t\t//     \t+ '\\\\u' + pad(hex(lowSurrogate(codePoint)), 4);\n\n\t\treturn string;\n\t};\n\n\tvar codePointToStringUnicode = function(codePoint) {\n\t\tif (codePoint <= 0xFFFF) {\n\t\t\treturn codePointToString(codePoint);\n\t\t}\n\t\treturn '\\\\u{' + codePoint.toString(16).toUpperCase() + '}';\n\t};\n\n\tvar symbolToCodePoint = function(symbol) {\n\t\tvar length = symbol.length;\n\t\tvar first = symbol.charCodeAt(0);\n\t\tvar second;\n\t\tif (\n\t\t\tfirst >= HIGH_SURROGATE_MIN && first <= HIGH_SURROGATE_MAX &&\n\t\t\tlength > 1 // There is a next code unit.\n\t\t) {\n\t\t\t// `first` is a high surrogate, and there is a next character. Assume\n\t\t\t// it’s a low surrogate (else it’s invalid usage of Regenerate anyway).\n\t\t\tsecond = symbol.charCodeAt(1);\n\t\t\t// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n\t\t\treturn (first - HIGH_SURROGATE_MIN) * 0x400 +\n\t\t\t\tsecond - LOW_SURROGATE_MIN + 0x10000;\n\t\t}\n\t\treturn first;\n\t};\n\n\tvar createBMPCharacterClasses = function(data) {\n\t\t// Iterate over the data per `(start, end)` pair.\n\t\tvar result = '';\n\t\tvar index = 0;\n\t\tvar start;\n\t\tvar end;\n\t\tvar length = data.length;\n\t\tif (dataIsSingleton(data)) {\n\t\t\treturn codePointToString(data[0]);\n\t\t}\n\t\twhile (index < length) {\n\t\t\tstart = data[index];\n\t\t\tend = data[index + 1] - 1; // Note: the `- 1` makes `end` inclusive.\n\t\t\tif (start == end) {\n\t\t\t\tresult += codePointToString(start);\n\t\t\t} else if (start + 1 == end) {\n\t\t\t\tresult += codePointToString(start) + codePointToString(end);\n\t\t\t} else {\n\t\t\t\tresult += codePointToString(start) + '-' + codePointToString(end);\n\t\t\t}\n\t\t\tindex += 2;\n\t\t}\n\t\treturn '[' + result + ']';\n\t};\n\n\tvar createUnicodeCharacterClasses = function(data) {\n\t\t// Iterate over the data per `(start, end)` pair.\n\t\tvar result = '';\n\t\tvar index = 0;\n\t\tvar start;\n\t\tvar end;\n\t\tvar length = data.length;\n\t\tif (dataIsSingleton(data)) {\n\t\t\treturn codePointToStringUnicode(data[0]);\n\t\t}\n\t\twhile (index < length) {\n\t\t\tstart = data[index];\n\t\t\tend = data[index + 1] - 1; // Note: the `- 1` makes `end` inclusive.\n\t\t\tif (start == end) {\n\t\t\t\tresult += codePointToStringUnicode(start);\n\t\t\t} else if (start + 1 == end) {\n\t\t\t\tresult += codePointToStringUnicode(start) + codePointToStringUnicode(end);\n\t\t\t} else {\n\t\t\t\tresult += codePointToStringUnicode(start) + '-' + codePointToStringUnicode(end);\n\t\t\t}\n\t\t\tindex += 2;\n\t\t}\n\t\treturn '[' + result + ']';\n\t};\n\n\tvar splitAtBMP = function(data) {\n\t\t// Iterate over the data per `(start, end)` pair.\n\t\tvar loneHighSurrogates = [];\n\t\tvar loneLowSurrogates = [];\n\t\tvar bmp = [];\n\t\tvar astral = [];\n\t\tvar index = 0;\n\t\tvar start;\n\t\tvar end;\n\t\tvar length = data.length;\n\t\twhile (index < length) {\n\t\t\tstart = data[index];\n\t\t\tend = data[index + 1] - 1; // Note: the `- 1` makes `end` inclusive.\n\n\t\t\tif (start < HIGH_SURROGATE_MIN) {\n\n\t\t\t\t// The range starts and ends before the high surrogate range.\n\t\t\t\t// E.g. (0, 0x10).\n\t\t\t\tif (end < HIGH_SURROGATE_MIN) {\n\t\t\t\t\tbmp.push(start, end + 1);\n\t\t\t\t}\n\n\t\t\t\t// The range starts before the high surrogate range and ends within it.\n\t\t\t\t// E.g. (0, 0xD855).\n\t\t\t\tif (end >= HIGH_SURROGATE_MIN && end <= HIGH_SURROGATE_MAX) {\n\t\t\t\t\tbmp.push(start, HIGH_SURROGATE_MIN);\n\t\t\t\t\tloneHighSurrogates.push(HIGH_SURROGATE_MIN, end + 1);\n\t\t\t\t}\n\n\t\t\t\t// The range starts before the high surrogate range and ends in the low\n\t\t\t\t// surrogate range. E.g. (0, 0xDCFF).\n\t\t\t\tif (end >= LOW_SURROGATE_MIN && end <= LOW_SURROGATE_MAX) {\n\t\t\t\t\tbmp.push(start, HIGH_SURROGATE_MIN);\n\t\t\t\t\tloneHighSurrogates.push(HIGH_SURROGATE_MIN, HIGH_SURROGATE_MAX + 1);\n\t\t\t\t\tloneLowSurrogates.push(LOW_SURROGATE_MIN, end + 1);\n\t\t\t\t}\n\n\t\t\t\t// The range starts before the high surrogate range and ends after the\n\t\t\t\t// low surrogate range. E.g. (0, 0x10FFFF).\n\t\t\t\tif (end > LOW_SURROGATE_MAX) {\n\t\t\t\t\tbmp.push(start, HIGH_SURROGATE_MIN);\n\t\t\t\t\tloneHighSurrogates.push(HIGH_SURROGATE_MIN, HIGH_SURROGATE_MAX + 1);\n\t\t\t\t\tloneLowSurrogates.push(LOW_SURROGATE_MIN, LOW_SURROGATE_MAX + 1);\n\t\t\t\t\tif (end <= 0xFFFF) {\n\t\t\t\t\t\tbmp.push(LOW_SURROGATE_MAX + 1, end + 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbmp.push(LOW_SURROGATE_MAX + 1, 0xFFFF + 1);\n\t\t\t\t\t\tastral.push(0xFFFF + 1, end + 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t} else if (start >= HIGH_SURROGATE_MIN && start <= HIGH_SURROGATE_MAX) {\n\n\t\t\t\t// The range starts and ends in the high surrogate range.\n\t\t\t\t// E.g. (0xD855, 0xD866).\n\t\t\t\tif (end >= HIGH_SURROGATE_MIN && end <= HIGH_SURROGATE_MAX) {\n\t\t\t\t\tloneHighSurrogates.push(start, end + 1);\n\t\t\t\t}\n\n\t\t\t\t// The range starts in the high surrogate range and ends in the low\n\t\t\t\t// surrogate range. E.g. (0xD855, 0xDCFF).\n\t\t\t\tif (end >= LOW_SURROGATE_MIN && end <= LOW_SURROGATE_MAX) {\n\t\t\t\t\tloneHighSurrogates.push(start, HIGH_SURROGATE_MAX + 1);\n\t\t\t\t\tloneLowSurrogates.push(LOW_SURROGATE_MIN, end + 1);\n\t\t\t\t}\n\n\t\t\t\t// The range starts in the high surrogate range and ends after the low\n\t\t\t\t// surrogate range. E.g. (0xD855, 0x10FFFF).\n\t\t\t\tif (end > LOW_SURROGATE_MAX) {\n\t\t\t\t\tloneHighSurrogates.push(start, HIGH_SURROGATE_MAX + 1);\n\t\t\t\t\tloneLowSurrogates.push(LOW_SURROGATE_MIN, LOW_SURROGATE_MAX + 1);\n\t\t\t\t\tif (end <= 0xFFFF) {\n\t\t\t\t\t\tbmp.push(LOW_SURROGATE_MAX + 1, end + 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbmp.push(LOW_SURROGATE_MAX + 1, 0xFFFF + 1);\n\t\t\t\t\t\tastral.push(0xFFFF + 1, end + 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t} else if (start >= LOW_SURROGATE_MIN && start <= LOW_SURROGATE_MAX) {\n\n\t\t\t\t// The range starts and ends in the low surrogate range.\n\t\t\t\t// E.g. (0xDCFF, 0xDDFF).\n\t\t\t\tif (end >= LOW_SURROGATE_MIN && end <= LOW_SURROGATE_MAX) {\n\t\t\t\t\tloneLowSurrogates.push(start, end + 1);\n\t\t\t\t}\n\n\t\t\t\t// The range starts in the low surrogate range and ends after the low\n\t\t\t\t// surrogate range. E.g. (0xDCFF, 0x10FFFF).\n\t\t\t\tif (end > LOW_SURROGATE_MAX) {\n\t\t\t\t\tloneLowSurrogates.push(start, LOW_SURROGATE_MAX + 1);\n\t\t\t\t\tif (end <= 0xFFFF) {\n\t\t\t\t\t\tbmp.push(LOW_SURROGATE_MAX + 1, end + 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbmp.push(LOW_SURROGATE_MAX + 1, 0xFFFF + 1);\n\t\t\t\t\t\tastral.push(0xFFFF + 1, end + 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t} else if (start > LOW_SURROGATE_MAX && start <= 0xFFFF) {\n\n\t\t\t\t// The range starts and ends after the low surrogate range.\n\t\t\t\t// E.g. (0xFFAA, 0x10FFFF).\n\t\t\t\tif (end <= 0xFFFF) {\n\t\t\t\t\tbmp.push(start, end + 1);\n\t\t\t\t} else {\n\t\t\t\t\tbmp.push(start, 0xFFFF + 1);\n\t\t\t\t\tastral.push(0xFFFF + 1, end + 1);\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// The range starts and ends in the astral range.\n\t\t\t\tastral.push(start, end + 1);\n\n\t\t\t}\n\n\t\t\tindex += 2;\n\t\t}\n\t\treturn {\n\t\t\t'loneHighSurrogates': loneHighSurrogates,\n\t\t\t'loneLowSurrogates': loneLowSurrogates,\n\t\t\t'bmp': bmp,\n\t\t\t'astral': astral\n\t\t};\n\t};\n\n\tvar optimizeSurrogateMappings = function(surrogateMappings) {\n\t\tvar result = [];\n\t\tvar tmpLow = [];\n\t\tvar addLow = false;\n\t\tvar mapping;\n\t\tvar nextMapping;\n\t\tvar highSurrogates;\n\t\tvar lowSurrogates;\n\t\tvar nextHighSurrogates;\n\t\tvar nextLowSurrogates;\n\t\tvar index = -1;\n\t\tvar length = surrogateMappings.length;\n\t\twhile (++index < length) {\n\t\t\tmapping = surrogateMappings[index];\n\t\t\tnextMapping = surrogateMappings[index + 1];\n\t\t\tif (!nextMapping) {\n\t\t\t\tresult.push(mapping);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\thighSurrogates = mapping[0];\n\t\t\tlowSurrogates = mapping[1];\n\t\t\tnextHighSurrogates = nextMapping[0];\n\t\t\tnextLowSurrogates = nextMapping[1];\n\n\t\t\t// Check for identical high surrogate ranges.\n\t\t\ttmpLow = lowSurrogates;\n\t\t\twhile (\n\t\t\t\tnextHighSurrogates &&\n\t\t\t\thighSurrogates[0] == nextHighSurrogates[0] &&\n\t\t\t\thighSurrogates[1] == nextHighSurrogates[1]\n\t\t\t) {\n\t\t\t\t// Merge with the next item.\n\t\t\t\tif (dataIsSingleton(nextLowSurrogates)) {\n\t\t\t\t\ttmpLow = dataAdd(tmpLow, nextLowSurrogates[0]);\n\t\t\t\t} else {\n\t\t\t\t\ttmpLow = dataAddRange(\n\t\t\t\t\t\ttmpLow,\n\t\t\t\t\t\tnextLowSurrogates[0],\n\t\t\t\t\t\tnextLowSurrogates[1] - 1\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\t++index;\n\t\t\t\tmapping = surrogateMappings[index];\n\t\t\t\thighSurrogates = mapping[0];\n\t\t\t\tlowSurrogates = mapping[1];\n\t\t\t\tnextMapping = surrogateMappings[index + 1];\n\t\t\t\tnextHighSurrogates = nextMapping && nextMapping[0];\n\t\t\t\tnextLowSurrogates = nextMapping && nextMapping[1];\n\t\t\t\taddLow = true;\n\t\t\t}\n\t\t\tresult.push([\n\t\t\t\thighSurrogates,\n\t\t\t\taddLow ? tmpLow : lowSurrogates\n\t\t\t]);\n\t\t\taddLow = false;\n\t\t}\n\t\treturn optimizeByLowSurrogates(result);\n\t};\n\n\tvar optimizeByLowSurrogates = function(surrogateMappings) {\n\t\tif (surrogateMappings.length == 1) {\n\t\t\treturn surrogateMappings;\n\t\t}\n\t\tvar index = -1;\n\t\tvar innerIndex = -1;\n\t\twhile (++index < surrogateMappings.length) {\n\t\t\tvar mapping = surrogateMappings[index];\n\t\t\tvar lowSurrogates = mapping[1];\n\t\t\tvar lowSurrogateStart = lowSurrogates[0];\n\t\t\tvar lowSurrogateEnd = lowSurrogates[1];\n\t\t\tinnerIndex = index; // Note: the loop starts at the next index.\n\t\t\twhile (++innerIndex < surrogateMappings.length) {\n\t\t\t\tvar otherMapping = surrogateMappings[innerIndex];\n\t\t\t\tvar otherLowSurrogates = otherMapping[1];\n\t\t\t\tvar otherLowSurrogateStart = otherLowSurrogates[0];\n\t\t\t\tvar otherLowSurrogateEnd = otherLowSurrogates[1];\n\t\t\t\tif (\n\t\t\t\t\tlowSurrogateStart == otherLowSurrogateStart &&\n\t\t\t\t\tlowSurrogateEnd == otherLowSurrogateEnd\n\t\t\t\t) {\n\t\t\t\t\t// Add the code points in the other item to this one.\n\t\t\t\t\tif (dataIsSingleton(otherMapping[0])) {\n\t\t\t\t\t\tmapping[0] = dataAdd(mapping[0], otherMapping[0][0]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmapping[0] = dataAddRange(\n\t\t\t\t\t\t\tmapping[0],\n\t\t\t\t\t\t\totherMapping[0][0],\n\t\t\t\t\t\t\totherMapping[0][1] - 1\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\t// Remove the other, now redundant, item.\n\t\t\t\t\tsurrogateMappings.splice(innerIndex, 1);\n\t\t\t\t\t--innerIndex;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn surrogateMappings;\n\t};\n\n\tvar surrogateSet = function(data) {\n\t\t// Exit early if `data` is an empty set.\n\t\tif (!data.length) {\n\t\t\treturn [];\n\t\t}\n\n\t\t// Iterate over the data per `(start, end)` pair.\n\t\tvar index = 0;\n\t\tvar start;\n\t\tvar end;\n\t\tvar startHigh;\n\t\tvar startLow;\n\t\tvar prevStartHigh = 0;\n\t\tvar prevEndHigh = 0;\n\t\tvar tmpLow = [];\n\t\tvar endHigh;\n\t\tvar endLow;\n\t\tvar surrogateMappings = [];\n\t\tvar length = data.length;\n\t\tvar dataHigh = [];\n\t\twhile (index < length) {\n\t\t\tstart = data[index];\n\t\t\tend = data[index + 1] - 1;\n\n\t\t\tstartHigh = highSurrogate(start);\n\t\t\tstartLow = lowSurrogate(start);\n\t\t\tendHigh = highSurrogate(end);\n\t\t\tendLow = lowSurrogate(end);\n\n\t\t\tvar startsWithLowestLowSurrogate = startLow == LOW_SURROGATE_MIN;\n\t\t\tvar endsWithHighestLowSurrogate = endLow == LOW_SURROGATE_MAX;\n\t\t\tvar complete = false;\n\n\t\t\t// Append the previous high-surrogate-to-low-surrogate mappings.\n\t\t\t// Step 1: `(startHigh, startLow)` to `(startHigh, LOW_SURROGATE_MAX)`.\n\t\t\tif (\n\t\t\t\tstartHigh == endHigh ||\n\t\t\t\tstartsWithLowestLowSurrogate && endsWithHighestLowSurrogate\n\t\t\t) {\n\t\t\t\tsurrogateMappings.push([\n\t\t\t\t\t[startHigh, endHigh + 1],\n\t\t\t\t\t[startLow, endLow + 1]\n\t\t\t\t]);\n\t\t\t\tcomplete = true;\n\t\t\t} else {\n\t\t\t\tsurrogateMappings.push([\n\t\t\t\t\t[startHigh, startHigh + 1],\n\t\t\t\t\t[startLow, LOW_SURROGATE_MAX + 1]\n\t\t\t\t]);\n\t\t\t}\n\n\t\t\t// Step 2: `(startHigh + 1, LOW_SURROGATE_MIN)` to\n\t\t\t// `(endHigh - 1, LOW_SURROGATE_MAX)`.\n\t\t\tif (!complete && startHigh + 1 < endHigh) {\n\t\t\t\tif (endsWithHighestLowSurrogate) {\n\t\t\t\t\t// Combine step 2 and step 3.\n\t\t\t\t\tsurrogateMappings.push([\n\t\t\t\t\t\t[startHigh + 1, endHigh + 1],\n\t\t\t\t\t\t[LOW_SURROGATE_MIN, endLow + 1]\n\t\t\t\t\t]);\n\t\t\t\t\tcomplete = true;\n\t\t\t\t} else {\n\t\t\t\t\tsurrogateMappings.push([\n\t\t\t\t\t\t[startHigh + 1, endHigh],\n\t\t\t\t\t\t[LOW_SURROGATE_MIN, LOW_SURROGATE_MAX + 1]\n\t\t\t\t\t]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Step 3. `(endHigh, LOW_SURROGATE_MIN)` to `(endHigh, endLow)`.\n\t\t\tif (!complete) {\n\t\t\t\tsurrogateMappings.push([\n\t\t\t\t\t[endHigh, endHigh + 1],\n\t\t\t\t\t[LOW_SURROGATE_MIN, endLow + 1]\n\t\t\t\t]);\n\t\t\t}\n\n\t\t\tprevStartHigh = startHigh;\n\t\t\tprevEndHigh = endHigh;\n\n\t\t\tindex += 2;\n\t\t}\n\n\t\t// The format of `surrogateMappings` is as follows:\n\t\t//\n\t\t//     [ surrogateMapping1, surrogateMapping2 ]\n\t\t//\n\t\t// i.e.:\n\t\t//\n\t\t//     [\n\t\t//       [ highSurrogates1, lowSurrogates1 ],\n\t\t//       [ highSurrogates2, lowSurrogates2 ]\n\t\t//     ]\n\t\treturn optimizeSurrogateMappings(surrogateMappings);\n\t};\n\n\tvar createSurrogateCharacterClasses = function(surrogateMappings) {\n\t\tvar result = [];\n\t\tforEach(surrogateMappings, function(surrogateMapping) {\n\t\t\tvar highSurrogates = surrogateMapping[0];\n\t\t\tvar lowSurrogates = surrogateMapping[1];\n\t\t\tresult.push(\n\t\t\t\tcreateBMPCharacterClasses(highSurrogates) +\n\t\t\t\tcreateBMPCharacterClasses(lowSurrogates)\n\t\t\t);\n\t\t});\n\t\treturn result.join('|');\n\t};\n\n\tvar createCharacterClassesFromData = function(data, bmpOnly, hasUnicodeFlag) {\n\t\tif (hasUnicodeFlag) {\n\t\t\treturn createUnicodeCharacterClasses(data);\n\t\t}\n\t\tvar result = [];\n\n\t\tvar parts = splitAtBMP(data);\n\t\tvar loneHighSurrogates = parts.loneHighSurrogates;\n\t\tvar loneLowSurrogates = parts.loneLowSurrogates;\n\t\tvar bmp = parts.bmp;\n\t\tvar astral = parts.astral;\n\t\tvar hasAstral = !dataIsEmpty(parts.astral);\n\t\tvar hasLoneHighSurrogates = !dataIsEmpty(loneHighSurrogates);\n\t\tvar hasLoneLowSurrogates = !dataIsEmpty(loneLowSurrogates);\n\n\t\tvar surrogateMappings = surrogateSet(astral);\n\n\t\tif (bmpOnly) {\n\t\t\tbmp = dataAddData(bmp, loneHighSurrogates);\n\t\t\thasLoneHighSurrogates = false;\n\t\t\tbmp = dataAddData(bmp, loneLowSurrogates);\n\t\t\thasLoneLowSurrogates = false;\n\t\t}\n\n\t\tif (!dataIsEmpty(bmp)) {\n\t\t\t// The data set contains BMP code points that are not high surrogates\n\t\t\t// needed for astral code points in the set.\n\t\t\tresult.push(createBMPCharacterClasses(bmp));\n\t\t}\n\t\tif (surrogateMappings.length) {\n\t\t\t// The data set contains astral code points; append character classes\n\t\t\t// based on their surrogate pairs.\n\t\t\tresult.push(createSurrogateCharacterClasses(surrogateMappings));\n\t\t}\n\t\t// https://gist.github.com/mathiasbynens/bbe7f870208abcfec860\n\t\tif (hasLoneHighSurrogates) {\n\t\t\tresult.push(\n\t\t\t\tcreateBMPCharacterClasses(loneHighSurrogates) +\n\t\t\t\t// Make sure the high surrogates aren’t part of a surrogate pair.\n\t\t\t\t'(?![\\\\uDC00-\\\\uDFFF])'\n\t\t\t);\n\t\t}\n\t\tif (hasLoneLowSurrogates) {\n\t\t\tresult.push(\n\t\t\t\t// It is not possible to accurately assert the low surrogates aren’t\n\t\t\t\t// part of a surrogate pair, since JavaScript regular expressions do\n\t\t\t\t// not support lookbehind.\n\t\t\t\t'(?:[^\\\\uD800-\\\\uDBFF]|^)' +\n\t\t\t\tcreateBMPCharacterClasses(loneLowSurrogates)\n\t\t\t);\n\t\t}\n\t\treturn result.join('|');\n\t};\n\n\t/*--------------------------------------------------------------------------*/\n\n\t// `regenerate` can be used as a constructor (and new methods can be added to\n\t// its prototype) but also as a regular function, the latter of which is the\n\t// documented and most common usage. For that reason, it’s not capitalized.\n\tvar regenerate = function(value) {\n\t\tif (arguments.length > 1) {\n\t\t\tvalue = slice.call(arguments);\n\t\t}\n\t\tif (this instanceof regenerate) {\n\t\t\tthis.data = [];\n\t\t\treturn value ? this.add(value) : this;\n\t\t}\n\t\treturn (new regenerate).add(value);\n\t};\n\n\tregenerate.version = '1.3.1';\n\n\tvar proto = regenerate.prototype;\n\textend(proto, {\n\t\t'add': function(value) {\n\t\t\tvar $this = this;\n\t\t\tif (value == null) {\n\t\t\t\treturn $this;\n\t\t\t}\n\t\t\tif (value instanceof regenerate) {\n\t\t\t\t// Allow passing other Regenerate instances.\n\t\t\t\t$this.data = dataAddData($this.data, value.data);\n\t\t\t\treturn $this;\n\t\t\t}\n\t\t\tif (arguments.length > 1) {\n\t\t\t\tvalue = slice.call(arguments);\n\t\t\t}\n\t\t\tif (isArray(value)) {\n\t\t\t\tforEach(value, function(item) {\n\t\t\t\t\t$this.add(item);\n\t\t\t\t});\n\t\t\t\treturn $this;\n\t\t\t}\n\t\t\t$this.data = dataAdd(\n\t\t\t\t$this.data,\n\t\t\t\tisNumber(value) ? value : symbolToCodePoint(value)\n\t\t\t);\n\t\t\treturn $this;\n\t\t},\n\t\t'remove': function(value) {\n\t\t\tvar $this = this;\n\t\t\tif (value == null) {\n\t\t\t\treturn $this;\n\t\t\t}\n\t\t\tif (value instanceof regenerate) {\n\t\t\t\t// Allow passing other Regenerate instances.\n\t\t\t\t$this.data = dataRemoveData($this.data, value.data);\n\t\t\t\treturn $this;\n\t\t\t}\n\t\t\tif (arguments.length > 1) {\n\t\t\t\tvalue = slice.call(arguments);\n\t\t\t}\n\t\t\tif (isArray(value)) {\n\t\t\t\tforEach(value, function(item) {\n\t\t\t\t\t$this.remove(item);\n\t\t\t\t});\n\t\t\t\treturn $this;\n\t\t\t}\n\t\t\t$this.data = dataRemove(\n\t\t\t\t$this.data,\n\t\t\t\tisNumber(value) ? value : symbolToCodePoint(value)\n\t\t\t);\n\t\t\treturn $this;\n\t\t},\n\t\t'addRange': function(start, end) {\n\t\t\tvar $this = this;\n\t\t\t$this.data = dataAddRange($this.data,\n\t\t\t\tisNumber(start) ? start : symbolToCodePoint(start),\n\t\t\t\tisNumber(end) ? end : symbolToCodePoint(end)\n\t\t\t);\n\t\t\treturn $this;\n\t\t},\n\t\t'removeRange': function(start, end) {\n\t\t\tvar $this = this;\n\t\t\tvar startCodePoint = isNumber(start) ? start : symbolToCodePoint(start);\n\t\t\tvar endCodePoint = isNumber(end) ? end : symbolToCodePoint(end);\n\t\t\t$this.data = dataRemoveRange(\n\t\t\t\t$this.data,\n\t\t\t\tstartCodePoint,\n\t\t\t\tendCodePoint\n\t\t\t);\n\t\t\treturn $this;\n\t\t},\n\t\t'intersection': function(argument) {\n\t\t\tvar $this = this;\n\t\t\t// Allow passing other Regenerate instances.\n\t\t\t// TODO: Optimize this by writing and using `dataIntersectionData()`.\n\t\t\tvar array = argument instanceof regenerate ?\n\t\t\t\tdataToArray(argument.data) :\n\t\t\t\targument;\n\t\t\t$this.data = dataIntersection($this.data, array);\n\t\t\treturn $this;\n\t\t},\n\t\t'contains': function(codePoint) {\n\t\t\treturn dataContains(\n\t\t\t\tthis.data,\n\t\t\t\tisNumber(codePoint) ? codePoint : symbolToCodePoint(codePoint)\n\t\t\t);\n\t\t},\n\t\t'clone': function() {\n\t\t\tvar set = new regenerate;\n\t\t\tset.data = this.data.slice(0);\n\t\t\treturn set;\n\t\t},\n\t\t'toString': function(options) {\n\t\t\tvar result = createCharacterClassesFromData(\n\t\t\t\tthis.data,\n\t\t\t\toptions ? options.bmpOnly : false,\n\t\t\t\toptions ? options.hasUnicodeFlag : false\n\t\t\t);\n\t\t\tif (!result) {\n\t\t\t\t// For an empty set, return something that can be inserted `/here/` to\n\t\t\t\t// form a valid regular expression. Avoid `(?:)` since that matches the\n\t\t\t\t// empty string.\n\t\t\t\treturn '[]';\n\t\t\t}\n\t\t\t// Use `\\0` instead of `\\x00` where possible.\n\t\t\treturn result.replace(regexNull, '\\\\0$1');\n\t\t},\n\t\t'toRegExp': function(flags) {\n\t\t\tvar pattern = this.toString(\n\t\t\t\tflags && flags.indexOf('u') != -1 ?\n\t\t\t\t\t{ 'hasUnicodeFlag': true } :\n\t\t\t\t\tnull\n\t\t\t);\n\t\t\treturn RegExp(pattern, flags || '');\n\t\t},\n\t\t'valueOf': function() { // Note: `valueOf` is aliased as `toArray`.\n\t\t\treturn dataToArray(this.data);\n\t\t}\n\t});\n\n\tproto.toArray = proto.valueOf;\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn regenerate;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = regenerate;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfreeExports.regenerate = regenerate;\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.regenerate = regenerate;\n\t}\n\n}(this));\n"]}