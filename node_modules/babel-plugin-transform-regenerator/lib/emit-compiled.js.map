{"version":3,"sources":["emit.js"],"names":[],"mappings":"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","file":"emit-compiled.js","sourcesContent":["\"use strict\";\n\nvar _typeof2 = require(\"babel-runtime/helpers/typeof\");\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nvar _stringify = require(\"babel-runtime/core-js/json/stringify\");\n\nvar _stringify2 = _interopRequireDefault(_stringify);\n\nvar _assert = require(\"assert\");\n\nvar _assert2 = _interopRequireDefault(_assert);\n\nvar _babelTypes = require(\"babel-types\");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nvar _leap = require(\"./leap\");\n\nvar leap = _interopRequireWildcard(_leap);\n\nvar _meta = require(\"./meta\");\n\nvar meta = _interopRequireWildcard(_meta);\n\nvar _util = require(\"./util\");\n\nvar util = _interopRequireWildcard(_util);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar hasOwn = Object.prototype.hasOwnProperty;\n\nfunction Emitter(contextId) {\n  _assert2.default.ok(this instanceof Emitter);\n  t.assertIdentifier(contextId);\n\n  this.nextTempId = 0;\n\n  this.contextId = contextId;\n\n  this.listing = [];\n\n  this.marked = [true];\n\n  this.finalLoc = loc();\n\n  this.tryEntries = [];\n\n  this.leapManager = new leap.LeapManager(this);\n}\n\nvar Ep = Emitter.prototype;\nexports.Emitter = Emitter;\n\nfunction loc() {\n  return t.numericLiteral(-1);\n}\n\nEp.mark = function (loc) {\n  t.assertLiteral(loc);\n  var index = this.listing.length;\n  if (loc.value === -1) {\n    loc.value = index;\n  } else {\n    _assert2.default.strictEqual(loc.value, index);\n  }\n  this.marked[index] = true;\n  return loc;\n};\n\nEp.emit = function (node) {\n  if (t.isExpression(node)) {\n    node = t.expressionStatement(node);\n  }\n\n  t.assertStatement(node);\n  this.listing.push(node);\n};\n\nEp.emitAssign = function (lhs, rhs) {\n  this.emit(this.assign(lhs, rhs));\n  return lhs;\n};\n\nEp.assign = function (lhs, rhs) {\n  return t.expressionStatement(t.assignmentExpression(\"=\", lhs, rhs));\n};\n\nEp.contextProperty = function (name, computed) {\n  return t.memberExpression(this.contextId, computed ? t.stringLiteral(name) : t.identifier(name), !!computed);\n};\n\nEp.stop = function (rval) {\n  if (rval) {\n    this.setReturnValue(rval);\n  }\n\n  this.jump(this.finalLoc);\n};\n\nEp.setReturnValue = function (valuePath) {\n  t.assertExpression(valuePath.value);\n\n  this.emitAssign(this.contextProperty(\"rval\"), this.explodeExpression(valuePath));\n};\n\nEp.clearPendingException = function (tryLoc, assignee) {\n  t.assertLiteral(tryLoc);\n\n  var catchCall = t.callExpression(this.contextProperty(\"catch\", true), [tryLoc]);\n\n  if (assignee) {\n    this.emitAssign(assignee, catchCall);\n  } else {\n    this.emit(catchCall);\n  }\n};\n\nEp.jump = function (toLoc) {\n  this.emitAssign(this.contextProperty(\"next\"), toLoc);\n  this.emit(t.breakStatement());\n};\n\nEp.jumpIf = function (test, toLoc) {\n  t.assertExpression(test);\n  t.assertLiteral(toLoc);\n\n  this.emit(t.ifStatement(test, t.blockStatement([this.assign(this.contextProperty(\"next\"), toLoc), t.breakStatement()])));\n};\n\nEp.jumpIfNot = function (test, toLoc) {\n  t.assertExpression(test);\n  t.assertLiteral(toLoc);\n\n  var negatedTest = void 0;\n  if (t.isUnaryExpression(test) && test.operator === \"!\") {\n    negatedTest = test.argument;\n  } else {\n    negatedTest = t.unaryExpression(\"!\", test);\n  }\n\n  this.emit(t.ifStatement(negatedTest, t.blockStatement([this.assign(this.contextProperty(\"next\"), toLoc), t.breakStatement()])));\n};\n\nEp.makeTempVar = function () {\n  return this.contextProperty(\"t\" + this.nextTempId++);\n};\n\nEp.getContextFunction = function (id) {\n  return t.functionExpression(id || null, [this.contextId], t.blockStatement([this.getDispatchLoop()]), false, false);\n};\n\nEp.getDispatchLoop = function () {\n  var self = this;\n  var cases = [];\n  var current = void 0;\n\n  var alreadyEnded = false;\n\n  self.listing.forEach(function (stmt, i) {\n    if (self.marked.hasOwnProperty(i)) {\n      cases.push(t.switchCase(t.numericLiteral(i), current = []));\n      alreadyEnded = false;\n    }\n\n    if (!alreadyEnded) {\n      current.push(stmt);\n      if (t.isCompletionStatement(stmt)) alreadyEnded = true;\n    }\n  });\n\n  this.finalLoc.value = this.listing.length;\n\n  cases.push(t.switchCase(this.finalLoc, []), t.switchCase(t.stringLiteral(\"end\"), [t.returnStatement(t.callExpression(this.contextProperty(\"stop\"), []))]));\n\n  return t.whileStatement(t.numericLiteral(1), t.switchStatement(t.assignmentExpression(\"=\", this.contextProperty(\"prev\"), this.contextProperty(\"next\")), cases));\n};\n\nEp.getTryLocsList = function () {\n  if (this.tryEntries.length === 0) {\n    return null;\n  }\n\n  var lastLocValue = 0;\n\n  return t.arrayExpression(this.tryEntries.map(function (tryEntry) {\n    var thisLocValue = tryEntry.firstLoc.value;\n    _assert2.default.ok(thisLocValue >= lastLocValue, \"try entries out of order\");\n    lastLocValue = thisLocValue;\n\n    var ce = tryEntry.catchEntry;\n    var fe = tryEntry.finallyEntry;\n\n    var locs = [tryEntry.firstLoc, ce ? ce.firstLoc : null];\n\n    if (fe) {\n      locs[2] = fe.firstLoc;\n      locs[3] = fe.afterLoc;\n    }\n\n    return t.arrayExpression(locs);\n  }));\n};\n\nEp.explode = function (path, ignoreResult) {\n  var node = path.node;\n  var self = this;\n\n  t.assertNode(node);\n\n  if (t.isDeclaration(node)) throw getDeclError(node);\n\n  if (t.isStatement(node)) return self.explodeStatement(path);\n\n  if (t.isExpression(node)) return self.explodeExpression(path, ignoreResult);\n\n  switch (node.type) {\n    case \"Program\":\n      return path.get(\"body\").map(self.explodeStatement, self);\n\n    case \"VariableDeclarator\":\n      throw getDeclError(node);\n\n    case \"Property\":\n    case \"SwitchCase\":\n    case \"CatchClause\":\n      throw new Error(node.type + \" nodes should be handled by their parents\");\n\n    default:\n      throw new Error(\"unknown Node of type \" + (0, _stringify2.default)(node.type));\n  }\n};\n\nfunction getDeclError(node) {\n  return new Error(\"all declarations should have been transformed into \" + \"assignments before the Exploder began its work: \" + (0, _stringify2.default)(node));\n}\n\nEp.explodeStatement = function (path, labelId) {\n  var stmt = path.node;\n  var self = this;\n  var before = void 0,\n      after = void 0,\n      head = void 0;\n\n  t.assertStatement(stmt);\n\n  if (labelId) {\n    t.assertIdentifier(labelId);\n  } else {\n    labelId = null;\n  }\n\n  if (t.isBlockStatement(stmt)) {\n    path.get(\"body\").forEach(function (path) {\n      self.explodeStatement(path);\n    });\n    return;\n  }\n\n  if (!meta.containsLeap(stmt)) {\n    self.emit(stmt);\n    return;\n  }\n\n  var _ret = function () {\n    switch (stmt.type) {\n      case \"ExpressionStatement\":\n        self.explodeExpression(path.get(\"expression\"), true);\n        break;\n\n      case \"LabeledStatement\":\n        after = loc();\n\n        self.leapManager.withEntry(new leap.LabeledEntry(after, stmt.label), function () {\n          self.explodeStatement(path.get(\"body\"), stmt.label);\n        });\n\n        self.mark(after);\n\n        break;\n\n      case \"WhileStatement\":\n        before = loc();\n        after = loc();\n\n        self.mark(before);\n        self.jumpIfNot(self.explodeExpression(path.get(\"test\")), after);\n        self.leapManager.withEntry(new leap.LoopEntry(after, before, labelId), function () {\n          self.explodeStatement(path.get(\"body\"));\n        });\n        self.jump(before);\n        self.mark(after);\n\n        break;\n\n      case \"DoWhileStatement\":\n        var first = loc();\n        var test = loc();\n        after = loc();\n\n        self.mark(first);\n        self.leapManager.withEntry(new leap.LoopEntry(after, test, labelId), function () {\n          self.explode(path.get(\"body\"));\n        });\n        self.mark(test);\n        self.jumpIf(self.explodeExpression(path.get(\"test\")), first);\n        self.mark(after);\n\n        break;\n\n      case \"ForStatement\":\n        head = loc();\n        var update = loc();\n        after = loc();\n\n        if (stmt.init) {\n          self.explode(path.get(\"init\"), true);\n        }\n\n        self.mark(head);\n\n        if (stmt.test) {\n          self.jumpIfNot(self.explodeExpression(path.get(\"test\")), after);\n        } else {}\n\n        self.leapManager.withEntry(new leap.LoopEntry(after, update, labelId), function () {\n          self.explodeStatement(path.get(\"body\"));\n        });\n\n        self.mark(update);\n\n        if (stmt.update) {\n          self.explode(path.get(\"update\"), true);\n        }\n\n        self.jump(head);\n\n        self.mark(after);\n\n        break;\n\n      case \"TypeCastExpression\":\n        return {\n          v: self.explodeExpression(path.get(\"expression\"))\n        };\n\n      case \"ForInStatement\":\n        head = loc();\n        after = loc();\n\n        var keyIterNextFn = self.makeTempVar();\n        self.emitAssign(keyIterNextFn, t.callExpression(util.runtimeProperty(\"keys\"), [self.explodeExpression(path.get(\"right\"))]));\n\n        self.mark(head);\n\n        var keyInfoTmpVar = self.makeTempVar();\n        self.jumpIf(t.memberExpression(t.assignmentExpression(\"=\", keyInfoTmpVar, t.callExpression(keyIterNextFn, [])), t.identifier(\"done\"), false), after);\n\n        self.emitAssign(stmt.left, t.memberExpression(keyInfoTmpVar, t.identifier(\"value\"), false));\n\n        self.leapManager.withEntry(new leap.LoopEntry(after, head, labelId), function () {\n          self.explodeStatement(path.get(\"body\"));\n        });\n\n        self.jump(head);\n\n        self.mark(after);\n\n        break;\n\n      case \"BreakStatement\":\n        self.emitAbruptCompletion({\n          type: \"break\",\n          target: self.leapManager.getBreakLoc(stmt.label)\n        });\n\n        break;\n\n      case \"ContinueStatement\":\n        self.emitAbruptCompletion({\n          type: \"continue\",\n          target: self.leapManager.getContinueLoc(stmt.label)\n        });\n\n        break;\n\n      case \"SwitchStatement\":\n        var disc = self.emitAssign(self.makeTempVar(), self.explodeExpression(path.get(\"discriminant\")));\n\n        after = loc();\n        var defaultLoc = loc();\n        var condition = defaultLoc;\n        var caseLocs = [];\n\n        var cases = stmt.cases || [];\n\n        for (var i = cases.length - 1; i >= 0; --i) {\n          var c = cases[i];\n          t.assertSwitchCase(c);\n\n          if (c.test) {\n            condition = t.conditionalExpression(t.binaryExpression(\"===\", disc, c.test), caseLocs[i] = loc(), condition);\n          } else {\n            caseLocs[i] = defaultLoc;\n          }\n        }\n\n        var discriminant = path.get(\"discriminant\");\n        discriminant.replaceWith(condition);\n        self.jump(self.explodeExpression(discriminant));\n\n        self.leapManager.withEntry(new leap.SwitchEntry(after), function () {\n          path.get(\"cases\").forEach(function (casePath) {\n            var i = casePath.key;\n            self.mark(caseLocs[i]);\n\n            casePath.get(\"consequent\").forEach(function (path) {\n              self.explodeStatement(path);\n            });\n          });\n        });\n\n        self.mark(after);\n        if (defaultLoc.value === -1) {\n          self.mark(defaultLoc);\n          _assert2.default.strictEqual(after.value, defaultLoc.value);\n        }\n\n        break;\n\n      case \"IfStatement\":\n        var elseLoc = stmt.alternate && loc();\n        after = loc();\n\n        self.jumpIfNot(self.explodeExpression(path.get(\"test\")), elseLoc || after);\n\n        self.explodeStatement(path.get(\"consequent\"));\n\n        if (elseLoc) {\n          self.jump(after);\n          self.mark(elseLoc);\n          self.explodeStatement(path.get(\"alternate\"));\n        }\n\n        self.mark(after);\n\n        break;\n\n      case \"ReturnStatement\":\n        self.emitAbruptCompletion({\n          type: \"return\",\n          value: self.explodeExpression(path.get(\"argument\"))\n        });\n\n        break;\n\n      case \"WithStatement\":\n        throw new Error(\"WithStatement not supported in generator functions.\");\n\n      case \"TryStatement\":\n        after = loc();\n\n        var handler = stmt.handler;\n\n        var catchLoc = handler && loc();\n        var catchEntry = catchLoc && new leap.CatchEntry(catchLoc, handler.param);\n\n        var finallyLoc = stmt.finalizer && loc();\n        var finallyEntry = finallyLoc && new leap.FinallyEntry(finallyLoc, after);\n\n        var tryEntry = new leap.TryEntry(self.getUnmarkedCurrentLoc(), catchEntry, finallyEntry);\n\n        self.tryEntries.push(tryEntry);\n        self.updateContextPrevLoc(tryEntry.firstLoc);\n\n        self.leapManager.withEntry(tryEntry, function () {\n          self.explodeStatement(path.get(\"block\"));\n\n          if (catchLoc) {\n            (function () {\n              if (finallyLoc) {\n                self.jump(finallyLoc);\n              } else {\n                self.jump(after);\n              }\n\n              self.updateContextPrevLoc(self.mark(catchLoc));\n\n              var bodyPath = path.get(\"handler.body\");\n              var safeParam = self.makeTempVar();\n              self.clearPendingException(tryEntry.firstLoc, safeParam);\n\n              bodyPath.traverse(catchParamVisitor, {\n                safeParam: safeParam,\n                catchParamName: handler.param.name\n              });\n\n              self.leapManager.withEntry(catchEntry, function () {\n                self.explodeStatement(bodyPath);\n              });\n            })();\n          }\n\n          if (finallyLoc) {\n            self.updateContextPrevLoc(self.mark(finallyLoc));\n\n            self.leapManager.withEntry(finallyEntry, function () {\n              self.explodeStatement(path.get(\"finalizer\"));\n            });\n\n            self.emit(t.returnStatement(t.callExpression(self.contextProperty(\"finish\"), [finallyEntry.firstLoc])));\n          }\n        });\n\n        self.mark(after);\n\n        break;\n\n      case \"ThrowStatement\":\n        self.emit(t.throwStatement(self.explodeExpression(path.get(\"argument\"))));\n\n        break;\n\n      default:\n        throw new Error(\"unknown Statement of type \" + (0, _stringify2.default)(stmt.type));\n    }\n  }();\n\n  if ((typeof _ret === \"undefined\" ? \"undefined\" : (0, _typeof3.default)(_ret)) === \"object\") return _ret.v;\n};\n\nvar catchParamVisitor = {\n  Identifier: function Identifier(path, state) {\n    if (path.node.name === state.catchParamName && util.isReference(path)) {\n      path.replaceWith(state.safeParam);\n    }\n  },\n\n  Scope: function Scope(path, state) {\n    if (path.scope.hasOwnBinding(state.catchParamName)) {\n      path.skip();\n    }\n  }\n};\n\nEp.emitAbruptCompletion = function (record) {\n  if (!isValidCompletion(record)) {\n    _assert2.default.ok(false, \"invalid completion record: \" + (0, _stringify2.default)(record));\n  }\n\n  _assert2.default.notStrictEqual(record.type, \"normal\", \"normal completions are not abrupt\");\n\n  var abruptArgs = [t.stringLiteral(record.type)];\n\n  if (record.type === \"break\" || record.type === \"continue\") {\n    t.assertLiteral(record.target);\n    abruptArgs[1] = record.target;\n  } else if (record.type === \"return\" || record.type === \"throw\") {\n    if (record.value) {\n      t.assertExpression(record.value);\n      abruptArgs[1] = record.value;\n    }\n  }\n\n  this.emit(t.returnStatement(t.callExpression(this.contextProperty(\"abrupt\"), abruptArgs)));\n};\n\nfunction isValidCompletion(record) {\n  var type = record.type;\n\n  if (type === \"normal\") {\n    return !hasOwn.call(record, \"target\");\n  }\n\n  if (type === \"break\" || type === \"continue\") {\n    return !hasOwn.call(record, \"value\") && t.isLiteral(record.target);\n  }\n\n  if (type === \"return\" || type === \"throw\") {\n    return hasOwn.call(record, \"value\") && !hasOwn.call(record, \"target\");\n  }\n\n  return false;\n}\n\nEp.getUnmarkedCurrentLoc = function () {\n  return t.numericLiteral(this.listing.length);\n};\n\nEp.updateContextPrevLoc = function (loc) {\n  if (loc) {\n    t.assertLiteral(loc);\n\n    if (loc.value === -1) {\n      loc.value = this.listing.length;\n    } else {\n      _assert2.default.strictEqual(loc.value, this.listing.length);\n    }\n  } else {\n    loc = this.getUnmarkedCurrentLoc();\n  }\n\n  this.emitAssign(this.contextProperty(\"prev\"), loc);\n};\n\nEp.explodeExpression = function (path, ignoreResult) {\n  var expr = path.node;\n  if (expr) {\n    t.assertExpression(expr);\n  } else {\n    return expr;\n  }\n\n  var self = this;\n  var result = void 0;\n  var after = void 0;\n\n  function finish(expr) {\n    t.assertExpression(expr);\n    if (ignoreResult) {\n      self.emit(expr);\n    } else {\n      return expr;\n    }\n  }\n\n  if (!meta.containsLeap(expr)) {\n    return finish(expr);\n  }\n\n  var hasLeapingChildren = meta.containsLeap.onlyChildren(expr);\n\n  function explodeViaTempVar(tempVar, childPath, ignoreChildResult) {\n    _assert2.default.ok(!ignoreChildResult || !tempVar, \"Ignoring the result of a child expression but forcing it to \" + \"be assigned to a temporary variable?\");\n\n    var result = self.explodeExpression(childPath, ignoreChildResult);\n\n    if (ignoreChildResult) {} else if (tempVar || hasLeapingChildren && !t.isLiteral(result)) {\n      result = self.emitAssign(tempVar || self.makeTempVar(), result);\n    }\n    return result;\n  }\n\n  var _ret3 = function () {\n\n    switch (expr.type) {\n      case \"MemberExpression\":\n        return {\n          v: finish(t.memberExpression(self.explodeExpression(path.get(\"object\")), expr.computed ? explodeViaTempVar(null, path.get(\"property\")) : expr.property, expr.computed))\n        };\n\n      case \"CallExpression\":\n        var calleePath = path.get(\"callee\");\n        var argsPath = path.get(\"arguments\");\n\n        var newCallee = void 0;\n        var newArgs = [];\n\n        var hasLeapingArgs = false;\n        argsPath.forEach(function (argPath) {\n          hasLeapingArgs = hasLeapingArgs || meta.containsLeap(argPath.node);\n        });\n\n        if (t.isMemberExpression(calleePath.node)) {\n          if (hasLeapingArgs) {\n\n            var newObject = explodeViaTempVar(self.makeTempVar(), calleePath.get(\"object\"));\n\n            var newProperty = calleePath.node.computed ? explodeViaTempVar(null, calleePath.get(\"property\")) : calleePath.node.property;\n\n            newArgs.unshift(newObject);\n\n            newCallee = t.memberExpression(t.memberExpression(newObject, newProperty, calleePath.node.computed), t.identifier(\"call\"), false);\n          } else {\n            newCallee = self.explodeExpression(calleePath);\n          }\n        } else {\n          newCallee = self.explodeExpression(calleePath);\n\n          if (t.isMemberExpression(newCallee)) {\n            newCallee = t.sequenceExpression([t.numericLiteral(0), newCallee]);\n          }\n        }\n\n        argsPath.forEach(function (argPath) {\n          newArgs.push(explodeViaTempVar(null, argPath));\n        });\n\n        return {\n          v: finish(t.callExpression(newCallee, newArgs))\n        };\n\n      case \"NewExpression\":\n        return {\n          v: finish(t.newExpression(explodeViaTempVar(null, path.get(\"callee\")), path.get(\"arguments\").map(function (argPath) {\n            return explodeViaTempVar(null, argPath);\n          })))\n        };\n\n      case \"ObjectExpression\":\n        return {\n          v: finish(t.objectExpression(path.get(\"properties\").map(function (propPath) {\n            if (propPath.isObjectProperty()) {\n              return t.objectProperty(propPath.node.key, explodeViaTempVar(null, propPath.get(\"value\")), propPath.node.computed);\n            } else {\n              return propPath.node;\n            }\n          })))\n        };\n\n      case \"ArrayExpression\":\n        return {\n          v: finish(t.arrayExpression(path.get(\"elements\").map(function (elemPath) {\n            return explodeViaTempVar(null, elemPath);\n          })))\n        };\n\n      case \"SequenceExpression\":\n        var lastIndex = expr.expressions.length - 1;\n\n        path.get(\"expressions\").forEach(function (exprPath) {\n          if (exprPath.key === lastIndex) {\n            result = self.explodeExpression(exprPath, ignoreResult);\n          } else {\n            self.explodeExpression(exprPath, true);\n          }\n        });\n\n        return {\n          v: result\n        };\n\n      case \"LogicalExpression\":\n        after = loc();\n\n        if (!ignoreResult) {\n          result = self.makeTempVar();\n        }\n\n        var left = explodeViaTempVar(result, path.get(\"left\"));\n\n        if (expr.operator === \"&&\") {\n          self.jumpIfNot(left, after);\n        } else {\n          _assert2.default.strictEqual(expr.operator, \"||\");\n          self.jumpIf(left, after);\n        }\n\n        explodeViaTempVar(result, path.get(\"right\"), ignoreResult);\n\n        self.mark(after);\n\n        return {\n          v: result\n        };\n\n      case \"ConditionalExpression\":\n        var elseLoc = loc();\n        after = loc();\n        var test = self.explodeExpression(path.get(\"test\"));\n\n        self.jumpIfNot(test, elseLoc);\n\n        if (!ignoreResult) {\n          result = self.makeTempVar();\n        }\n\n        explodeViaTempVar(result, path.get(\"consequent\"), ignoreResult);\n        self.jump(after);\n\n        self.mark(elseLoc);\n        explodeViaTempVar(result, path.get(\"alternate\"), ignoreResult);\n\n        self.mark(after);\n\n        return {\n          v: result\n        };\n\n      case \"UnaryExpression\":\n        return {\n          v: finish(t.unaryExpression(expr.operator, self.explodeExpression(path.get(\"argument\")), !!expr.prefix))\n        };\n\n      case \"BinaryExpression\":\n        return {\n          v: finish(t.binaryExpression(expr.operator, explodeViaTempVar(null, path.get(\"left\")), explodeViaTempVar(null, path.get(\"right\"))))\n        };\n\n      case \"AssignmentExpression\":\n        return {\n          v: finish(t.assignmentExpression(expr.operator, self.explodeExpression(path.get(\"left\")), self.explodeExpression(path.get(\"right\"))))\n        };\n\n      case \"UpdateExpression\":\n        return {\n          v: finish(t.updateExpression(expr.operator, self.explodeExpression(path.get(\"argument\")), expr.prefix))\n        };\n\n      case \"YieldExpression\":\n        after = loc();\n        var arg = expr.argument && self.explodeExpression(path.get(\"argument\"));\n\n        if (arg && expr.delegate) {\n          var _result = self.makeTempVar();\n\n          self.emit(t.returnStatement(t.callExpression(self.contextProperty(\"delegateYield\"), [arg, t.stringLiteral(_result.property.name), after])));\n\n          self.mark(after);\n\n          return {\n            v: _result\n          };\n        }\n\n        self.emitAssign(self.contextProperty(\"next\"), after);\n        self.emit(t.returnStatement(arg || null));\n        self.mark(after);\n\n        return {\n          v: self.contextProperty(\"sent\")\n        };\n\n      default:\n        throw new Error(\"unknown Expression of type \" + (0, _stringify2.default)(expr.type));\n    }\n  }();\n\n  if ((typeof _ret3 === \"undefined\" ? \"undefined\" : (0, _typeof3.default)(_ret3)) === \"object\") return _ret3.v;\n};"]}